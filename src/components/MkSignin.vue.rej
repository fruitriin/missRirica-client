@@ -1,134 +1,55 @@
 <template>
-  <form
-    class="eppvobhk"
-    :class="{ signing, totpLogin }"
-    @submit.prevent="onSubmit"
-  >
-    <div class="auth _gaps_m">
-      <div
-        v-show="withAvatar"
-        class="avatar"
-        :style="{
-          backgroundImage: user ? `url('${user.avatarUrl}')` : null,
-          marginBottom: message ? '1.5em' : null,
-        }"
-      ></div>
-      <MkInfo v-if="message">
-        {{ message }}
-      </MkInfo>
-      <div v-if="!totpLogin" class="normal-signin _gaps_m">
+  <form class="eppvobhk" :class="{ signing }" @submit.prevent="onSubmit">
+    <div class="normal-signin">
+      {{ i18n.ts.ririca.instance }}
+      <MkSelect v-model="instanceUrl" large :model-value="instances[0]?.url">
+        <option value="other">
+          {{ i18n.ts.ririca.selectInstanceYourself }}
+        </option>
+        <option
+          v-for="(instance, i) in instances"
+          :key="instance.url"
+          :value="instance.url"
+          :selected="i === 0"
+        >
+          {{ instance.name }}
+        </option>
+      </MkSelect>
+      <template v-if="instanceUrl === 'other'">
+        URL
         <MkInput
-          v-model="username"
-          :placeholder="i18n.ts.username"
-          type="text"
-          pattern="^[a-zA-Z0-9_]+$"
+          v-model="instanceUrlOther"
           :spellcheck="false"
-          autocomplete="username"
           autofocus
           required
-          data-cy-signin-username
-          @update:model-value="onUsernameChange"
-        >
-          <template #prefix>@</template>
-          <template #suffix>@{{ host }}</template>
-        </MkInput>
-        <MkInput
-          v-if="!user || (user && !user.usePasswordLessLogin)"
-          v-model="password"
-          :placeholder="i18n.ts.password"
-          type="password"
-          :with-password-toggle="true"
-          required
-          data-cy-signin-password
-        >
-          <template #prefix><i class="ti ti-lock"></i></template>
-          <template #caption
-            ><button class="_textButton" type="button" @click="resetPassword">
-              {{ i18n.ts.forgotPassword }}
-            </button></template
-          >
-        </MkInput>
-        <MkButton
-          type="submit"
-          large
-          primary
-          rounded
-          :disabled="signing"
-          style="margin: 0 auto"
-          >{{ signing ? i18n.ts.loggingIn : i18n.ts.login }}</MkButton
-        >
-      </div>
-      <div
-        v-if="totpLogin"
-        class="2fa-signin"
-        :class="{ securityKeys: user && user.securityKeys }"
+        />
+      </template>
+      {{ i18n.ts.ririca.accessToken }}
+      <MkInput
+        v-model="token"
+        :spellcheck="false"
+        autofocus
+        required
+        data-cy-signin-username
+      ></MkInput>
+      <MkButton
+        class="_formBlock"
+        type="submit"
+        primary
+        :disabled="signing"
+        style="margin: 0 auto"
       >
-        <div v-if="user && user.securityKeys" class="twofa-group tap-group">
-          <p>{{ i18n.ts.tapSecurityKey }}</p>
-          <MkButton v-if="!queryingKey" @click="queryKey">
-            {{ i18n.ts.retry }}
-          </MkButton>
-        </div>
-        <div v-if="user && user.securityKeys" class="or-hr">
-          <p class="or-msg">{{ i18n.ts.or }}</p>
-        </div>
-        <div class="twofa-group totp-group">
-          <p style="margin-bottom: 0">{{ i18n.ts.twoStepAuthentication }}</p>
-          <MkInput
-            v-if="user && user.usePasswordLessLogin"
-            v-model="password"
-            type="password"
-            :with-password-toggle="true"
-            required
-          >
-            <template #label>{{ i18n.ts.password }}</template>
-            <template #prefix><i class="ti ti-lock"></i></template>
-          </MkInput>
-          <MkInput
-            v-model="token"
-            type="text"
-            pattern="^[0-9]{6}$"
-            autocomplete="off"
-            :spellcheck="false"
-            required
-          >
-            <template #label>{{ i18n.ts.token }}</template>
-            <template #prefix><i class="ti ti-123"></i></template>
-          </MkInput>
-          <MkButton
-            type="submit"
-            :disabled="signing"
-            large
-            primary
-            rounded
-            style="margin: 0 auto"
-            >{{ signing ? i18n.ts.loggingIn : i18n.ts.login }}</MkButton
-          >
-        </div>
-      </div>
+        {{ signing ? i18n.ts.loggingIn : i18n.ts.login }}
+      </MkButton>
     </div>
-    <div class="social">
+
+    <div style="display: flex; justify-content: center">
       <a
-        v-if="meta && meta.enableTwitterIntegration"
-        class="_borderButton _margin"
-        :href="`${apiUrl}/signin/twitter`"
-        ><i class="ti ti-brand-twitter" style="margin-right: 4px"></i
-        >{{ $t("signinWith", { x: "Twitter" }) }}</a
+        href="https://misskey.io/notes/99l9jqqun2"
+        target="_blank"
+        style="color: var(--link); text-align: center"
+        >{{ i18n.ts.ririca.howToCreateToken }}</a
       >
-      <a
-        v-if="meta && meta.enableGithubIntegration"
-        class="_borderButton _margin"
-        :href="`${apiUrl}/signin/github`"
-        ><i class="ti ti-brand-github" style="margin-right: 4px"></i
-        >{{ $t("signinWith", { x: "GitHub" }) }}</a
-      >
-      <a
-        v-if="meta && meta.enableDiscordIntegration"
-        class="_borderButton _margin"
-        :href="`${apiUrl}/signin/discord`"
-        ><i class="ti ti-brand-discord" style="margin-right: 4px"></i
-        >{{ $t("signinWith", { x: "Discord" }) }}</a
-      >
     </div>
   </form>
 </template>
@@ -230,38 +161,9 @@
 function onSubmit() {
   signing = true;
   console.log("submit");
-  if (!totpLogin && user && user.twoFactorEnabled) {
-    if (window.PublicKeyCredential && user.securityKeys) {
-      os.api("signin", {
-        username,
-        password,
-        "hcaptcha-response": hCaptchaResponse,
-        "g-recaptcha-response": reCaptchaResponse,
-      })
-        .then((res) => {
-          totpLogin = true;
-          signing = false;
-          challengeData = res;
-          return queryKey();
-        })
-        .catch(loginFailed);
-    } else {
-      totpLogin = true;
-      signing = false;
-    }
-  } else {
-    os.api("signin", {
-      username,
-      password,
-      "hcaptcha-response": hCaptchaResponse,
-      "g-recaptcha-response": reCaptchaResponse,
-      token: user && user.twoFactorEnabled ? token : undefined,
-    })
-      .then((res) => {
-        emit("login", res);
-        onLogin(res);
-      })
-      .catch(loginFailed);
+  if (!token.value) {
+    login(token, instanceUrlResult);
+    signing = false;
   }
 }
 
