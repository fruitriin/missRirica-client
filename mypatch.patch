diff -ru migrateWork/account.ts src/account.ts
--- migrateWork/account.ts	2023-02-19 20:26:43
+++ src/account.ts	2023-02-19 19:02:03
@@ -4,7 +4,6 @@
 import { i18n } from "./i18n";
 import { miLocalStorage } from "./local-storage";
 import { del, get, set } from "@/scripts/idb-proxy";
-import { apiUrl } from "@/config";
 import { waiting, api, popup, popupMenu, success, alert } from "@/os";
 import { unisonReload, reloadChannel } from "@/scripts/unison-reload";
 
@@ -12,12 +11,16 @@
 
 type Account = misskey.entities.MeDetailed;
 
-const accountData = miLocalStorage.getItem("account");
+let accountData = null;
+try {
+  accountData = JSON.parse(miLocalStorage.getItem("account"));
+} catch (e) {
+  miLocalStorage.removeItem("account");
+  window.location.reload();
+}
 
 // TODO: 外部からはreadonlyに
-export const $i = accountData
-  ? reactive(JSON.parse(accountData) as Account)
-  : null;
+export const $i = accountData ? reactive(accountData as Account) : null;
 
 export const iAmModerator = $i != null && ($i.isAdmin || $i.isModerator);
 export const iAmAdmin = $i != null && $i.isAdmin;
@@ -35,49 +38,24 @@
 
   const accounts = await getAccounts();
 
-  //#region Remove service worker registration
-  try {
-    if (navigator.serviceWorker.controller) {
-      const registration = await navigator.serviceWorker.ready;
-      const push = await registration.pushManager.getSubscription();
-      if (push) {
-        await window.fetch(`${apiUrl}/sw/unregister`, {
-          method: "POST",
-          body: JSON.stringify({
-            i: $i.token,
-            endpoint: push.endpoint,
-          }),
-          headers: {
-            "Content-Type": "application/json",
-          },
-        });
-      }
-    }
-
-    if (accounts.length === 0) {
-      await navigator.serviceWorker.getRegistrations().then((registrations) => {
-        return Promise.all(
-          registrations.map((registration) => registration.unregister())
-        );
-      });
-    }
-  } catch (err) {}
-  //#endregion
-
-  if (accounts.length > 0) login(accounts[0].token);
+  if (accounts.length > 0) login(accounts[0].token, accounts[0].instanceUrl);
   else unisonReload("/");
 }
 
 export async function getAccounts(): Promise<
-  { id: Account["id"]; token: Account["token"] }[]
+  { id: Account["id"]; token: Account["token"]; instanceUrl: string }[]
 > {
   return (await get("accounts")) || [];
 }
 
-export async function addAccount(id: Account["id"], token: Account["token"]) {
+export async function addAccount(
+  id: Account["id"],
+  token: Account["token"],
+  instanceUrl: string
+) {
   const accounts = await getAccounts();
   if (!accounts.some((x) => x.id === id)) {
-    await set("accounts", accounts.concat([{ id, token }]));
+    await set("accounts", accounts.concat([{ id, token, instanceUrl }]));
   }
 }
 
@@ -92,43 +70,32 @@
   else await del("accounts");
 }
 
-function fetchAccount(token: string): Promise<Account> {
-  return new Promise((done, fail) => {
-    // Fetch user
-    window
-      .fetch(`${apiUrl}/i`, {
-        method: "POST",
-        body: JSON.stringify({
-          i: token,
-        }),
-        headers: {
-          "Content-Type": "application/json",
-        },
-      })
-      .then((res) => res.json())
-      .then((res) => {
-        if (res.error) {
-          if (res.error.id === "a8c724b3-6e9c-4b46-b1a8-bc3ed6258370") {
-            showSuspendedDialog().then(() => {
-              signout();
-            });
-          } else {
-            alert({
-              type: "error",
-              title: i18n.ts.failedToFetchAccountInformation,
-              text: JSON.stringify(res.error),
-            });
-          }
-        } else {
-          res.token = token;
-          done(res);
-        }
-      })
-      .catch(fail);
-  });
+function fetchAccount(
+  token: string,
+  instanceUrl: string
+): Promise<Account & { instanceUrl: string }> {
+  return new misskey.api.APIClient({ origin: instanceUrl, credential: token })
+    .request("i")
+    .then((res) => {
+      return { ...(res as Account), token, instanceUrl };
+    })
+    .catch((res) => {
+      if (res.error.id === "a8c724b3-6e9c-4b46-b1a8-bc3ed6258370") {
+        showSuspendedDialog().then(() => {
+          signout();
+        });
+      } else {
+        alert({
+          type: "error",
+          title: i18n.ts.failedToFetchAccountInformation,
+          text: JSON.stringify(res.error),
+        });
+      }
+      return Promise.reject(res);
+    });
 }
 
-export function updateAccount(accountData) {
+export function updateAccount(accountData: Object) {
   for (const [key, value] of Object.entries(accountData)) {
     $i[key] = value;
   }
@@ -136,16 +103,40 @@
 }
 
 export function refreshAccount() {
-  return fetchAccount($i.token).then(updateAccount);
+  miLocalStorage.removeItem("lastEmojisFetchedAt");
+  miLocalStorage.removeItem("emojis");
+  return fetchAccount($i.token, $i.instanceUrl).then(updateAccount);
 }
 
-export async function login(token: Account["token"], redirect?: string) {
+export async function login(
+  token: Account["token"],
+  instanceUrl: string,
+  redirect?: string
+) {
   waiting();
-  if (_DEV_) console.log("logging as token ", token);
-  const me = await fetchAccount(token);
+  if (_DEV_) console.log("logging as token ", token, instanceUrl);
+
+  const me = await fetchAccount(token, instanceUrl).catch(async (res) => {
+    await alert({
+      type: "error",
+      title: i18n.ts.failedToFetchAccountInformation,
+      text: JSON.stringify(res.error),
+    });
+    unisonReload();
+  });
+
   miLocalStorage.setItem("account", JSON.stringify(me));
+  miLocalStorage.setItem(
+    "instance",
+    JSON.stringify(
+      await new misskey.api.APIClient({
+        origin: instanceUrl,
+        credential: token,
+      }).request("meta")
+    )
+  );
   document.cookie = `token=${token}; path=/; max-age=31536000`; // bull dashboardの認証とかで使う
-  await addAccount(me.id, token);
+  await addAccount(me.id, token, instanceUrl);
 
   if (redirect) {
     // 他のタブは再読み込みするだけ
@@ -173,7 +164,7 @@
       {},
       {
         done: (res) => {
-          addAccount(res.id, res.i);
+          addAccount(res.id, res.i, res.instanceUrl);
           success();
         },
       },
@@ -187,8 +178,8 @@
       {},
       {
         done: (res) => {
-          addAccount(res.id, res.i);
-          switchAccountWithToken(res.i);
+          addAccount(res.id, res.i, res.instanceUrl);
+          switchAccountWithToken(res.i, res.instanceUrl);
         },
       },
       "closed"
@@ -197,12 +188,13 @@
 
   async function switchAccount(account: misskey.entities.UserDetailed) {
     const storedAccounts = await getAccounts();
-    const token = storedAccounts.find((x) => x.id === account.id).token;
-    switchAccountWithToken(token);
+    const acc = storedAccounts.find((x) => x.id === account.id);
+    miLocalStorage.removeItem("lastEmojisFetchedAt");
+    switchAccountWithToken(acc.token, acc.instanceUrl);
   }
 
-  function switchAccountWithToken(token: string) {
-    login(token);
+  function switchAccountWithToken(token: string, instanceUrl: string) {
+    login(token, instanceUrl);
   }
 
   const storedAccounts = await getAccounts().then((accounts) =>
@@ -230,11 +222,23 @@
   const accountItemPromises = storedAccounts.map(
     (a) =>
       new Promise((res) => {
-        accountsPromise.then((accounts) => {
-          const account = accounts.find((x) => x.id === a.id);
-          if (account == null) return res(null);
-          res(createItem(account));
+        const client = new misskey.api.APIClient({
+          origin: a.instanceUrl,
+          credential: a.token,
         });
+
+        client
+          .request("users/show", {
+            userIds: [a.id],
+          })
+          .then((accounts) => {
+            const account = accounts.find((x) => x.id === a.id);
+            if (account == null) return res(null);
+
+            client.request("meta").then((meta) => {
+              res(createItem({ ...account, host: meta.name }));
+            });
+          });
       })
   );
 
@@ -260,12 +264,6 @@
                 text: i18n.ts.existingAccount,
                 action: () => {
                   showSigninDialog();
-                },
-              },
-              {
-                text: i18n.ts.createAccount,
-                action: () => {
-                  createAccount();
                 },
               },
             ],
Only in src: assets
diff -ru migrateWork/components/MkAchievements.vue src/components/MkAchievements.vue
--- migrateWork/components/MkAchievements.vue	2023-02-19 20:26:43
+++ src/components/MkAchievements.vue	2023-02-18 21:58:45
@@ -41,17 +41,11 @@
           </div>
           <div :class="$style.description">
             {{
-              withDescription
-                ? i18n.ts._achievements._types["_" + achievement.name]
-                    .description
-                : "???"
+              i18n.ts._achievements._types["_" + achievement.name].description
             }}
           </div>
           <div
-            v-if="
-              i18n.ts._achievements._types['_' + achievement.name].flavor &&
-              withDescription
-            "
+            v-if="i18n.ts._achievements._types['_' + achievement.name].flavor"
             :class="$style.flavor"
           >
             {{ i18n.ts._achievements._types["_" + achievement.name].flavor }}
@@ -97,11 +91,9 @@
   defineProps<{
     user: misskey.entities.User;
     withLocked: boolean;
-    withDescription: boolean;
   }>(),
   {
     withLocked: true,
-    withDescription: true,
   }
 );
 
diff -ru migrateWork/components/MkClickerGame.vue src/components/MkClickerGame.vue
--- migrateWork/components/MkClickerGame.vue	2023-02-19 20:26:44
+++ src/components/MkClickerGame.vue	2023-02-18 21:58:45
@@ -12,7 +12,7 @@
         :class="$style.button"
         @click="onClick"
       >
-        <img src="/client-assets/cookie.png" :class="$style.img" />
+        <!--			<img src="/client-assets/cookie.png" :class="$style.img">-->
       </button>
     </div>
     <div v-else>
diff -ru migrateWork/components/MkDonation.vue src/components/MkDonation.vue
--- migrateWork/components/MkDonation.vue	2023-02-19 20:26:44
+++ src/components/MkDonation.vue	2023-02-19 18:32:25
@@ -23,7 +23,7 @@
       </svg>
     </div>
     <div :class="$style.main">
-      <div :class="$style.title">{{ i18n.ts.didYouLikeMisskey }}</div>
+      <div :class="$style.title">MissRiricaの使い方</div>
       <div :class="$style.text">
         <I18n :src="i18n.ts.pleaseDonate" tag="span">
           <template #host>
@@ -31,11 +31,9 @@
           </template>
         </I18n>
         <div style="margin-top: 0.2em">
-          <MkLink
-            target="_blank"
-            url="https://misskey-hub.net/docs/donate.html"
-            >{{ i18n.ts.learnMore }}</MkLink
-          >
+          <MkLink target="_blank" url="https://riinswork.space/missRirica/">
+            {{ i18n.ts.learnMore }}
+          </MkLink>
         </div>
       </div>
       <div class="_buttons">
diff -ru migrateWork/components/MkMention.vue src/components/MkMention.vue
--- migrateWork/components/MkMention.vue	2023-02-19 20:26:44
+++ src/components/MkMention.vue	2023-02-18 21:58:45
@@ -5,7 +5,11 @@
     :to="url"
     :style="{ background: bgCss }"
   >
-    <img :class="$style.icon" :src="`/avatar/@${username}@${host}`" alt="" />
+    <img
+      :class="$style.icon"
+      :src="`${$i.instanceUrl}/avatar/@${username}@${host}`"
+      alt=""
+    />
     <span>
       <span :class="$style.username">@{{ username }}</span>
       <span
diff -ru migrateWork/components/MkMenu.vue src/components/MkMenu.vue
--- migrateWork/components/MkMenu.vue	2023-02-19 20:26:44
+++ src/components/MkMenu.vue	2023-02-18 21:58:45
@@ -89,6 +89,7 @@
           <MkAvatar :user="item.user" :class="$style.avatar" /><MkUserName
             :user="item.user"
           />
+          [{{ item.user.host }}]
           <span v-if="item.indicate" :class="$style.indicator"
             ><i class="_indicatorCircle"></i
           ></span>
diff -ru migrateWork/components/MkNotification.vue src/components/MkNotification.vue
--- migrateWork/components/MkNotification.vue	2023-02-19 20:26:45
+++ src/components/MkNotification.vue	2023-02-18 21:58:45
@@ -55,7 +55,7 @@
         ></i>
         <i
           v-else-if="notification.type === 'achievementEarned'"
-          class="ti ti-medal"
+          class="ti ti-military-award"
         ></i>
         <!-- notification.reaction が null になることはまずないが、ここでoptional chaining使うと一部ブラウザで刺さるので念の為 -->
         <MkReactionIcon
@@ -430,7 +430,7 @@
 
 .t_achievementEarned {
   padding: 3px;
-  background: #cb9a11;
+  background: #88a6b7;
   pointer-events: none;
 }
 
diff -ru migrateWork/components/MkPostForm.vue src/components/MkPostForm.vue
--- migrateWork/components/MkPostForm.vue	2023-02-19 20:26:45
+++ src/components/MkPostForm.vue	2023-02-19 19:23:14
@@ -1,1372 +1,199 @@
 <template>
-  <div
-    :class="[$style.root, { [$style.modal]: modal, _popup: modal }]"
-    @dragover.stop="onDragover"
-    @dragenter="onDragenter"
-    @dragleave="onDragleave"
-    @drop.stop="onDrop"
-  >
-    <header :class="$style.header">
-      <button
-        v-if="!fixed"
-        :class="$style.cancel"
-        class="_button"
-        @click="cancel"
-      >
-        <i class="ti ti-x"></i>
-      </button>
-      <button
-        v-click-anime
-        v-tooltip="i18n.ts.switchAccount"
-        :class="$style.account"
-        class="_button"
-        @click="openAccountMenu"
-      >
-        <MkAvatar :user="postAccount ?? $i" :class="$style.avatar" />
-      </button>
-      <div :class="$style.headerRight">
-        <span
-          :class="[
-            $style.textCount,
-            { [$style.textOver]: textLength > maxTextLength },
-          ]"
-          >{{ maxTextLength - textLength }}</span
-        >
-        <span v-if="localOnly" :class="$style.localOnly"
-          ><i class="ti ti-world-off"></i
-        ></span>
-        <button
-          ref="visibilityButton"
-          v-tooltip="i18n.ts.visibility"
-          class="_button"
-          :class="$style.visibility"
-          :disabled="channel != null"
-          @click="setVisibility"
-        >
-          <span v-if="visibility === 'public'"
-            ><i class="ti ti-world"></i
-          ></span>
-          <span v-if="visibility === 'home'"><i class="ti ti-home"></i></span>
-          <span v-if="visibility === 'followers'"
-            ><i class="ti ti-lock"></i
-          ></span>
-          <span v-if="visibility === 'specified'"
-            ><i class="ti ti-mail"></i
-          ></span>
-        </button>
-        <button
-          v-tooltip="i18n.ts.previewNoteText"
-          class="_button"
-          :class="[
-            $style.previewButton,
-            { [$style.previewButtonActive]: showPreview },
-          ]"
-          @click="showPreview = !showPreview"
-        >
-          <i class="ti ti-eye"></i>
-        </button>
-        <button
-          v-click-anime
-          class="_button"
-          :class="[$style.submit, { [$style.submitPosting]: posting }]"
-          :disabled="!canPost"
-          data-cy-open-post-form-submit
-          @click="post"
-        >
-          <div :class="$style.submitInner">
-            <template v-if="posted"></template>
-            <template v-else-if="posting"><MkEllipsis /></template>
-            <template v-else>{{ submitText }}</template>
-            <i
-              style="margin-left: 6px"
-              :class="
-                posted
-                  ? 'ti ti-check'
-                  : reply
-                  ? 'ti ti-arrow-back-up'
-                  : renote
-                  ? 'ti ti-quote'
-                  : 'ti ti-send'
-              "
-            ></i>
-          </div>
-        </button>
-      </div>
-    </header>
-    <div :class="[$style.form]">
-      <MkNoteSimple v-if="reply" :class="$style.targetNote" :note="reply" />
-      <MkNoteSimple v-if="renote" :class="$style.targetNote" :note="renote" />
-      <div v-if="quoteId" :class="$style.withQuote">
-        <i class="ti ti-quote"></i> {{ i18n.ts.quoteAttached
-        }}<button @click="quoteId = null"><i class="ti ti-x"></i></button>
-      </div>
-      <div v-if="visibility === 'specified'" :class="$style.toSpecified">
-        <span style="margin-right: 8px">{{ i18n.ts.recipient }}</span>
-        <div :class="$style.visibleUsers">
-          <span
-            v-for="u in visibleUsers"
-            :key="u.id"
-            :class="$style.visibleUser"
-          >
-            <MkAcct :user="u" />
-            <button
-              class="_button"
-              style="padding: 4px 8px"
-              @click="removeVisibleUser(u)"
-            >
-              <i class="ti ti-x"></i>
-            </button>
-          </span>
-          <button
-            class="_buttonPrimary"
-            style="padding: 4px; border-radius: 8px"
-            @click="addVisibleUser"
-          >
-            <i class="ti ti-plus ti-fw"></i>
-          </button>
-        </div>
-      </div>
-      <MkInfo
-        v-if="hasNotSpecifiedMentions"
-        warn
-        :class="$style.hasNotSpecifiedMentions"
-        >{{ i18n.ts.notSpecifiedMentionWarning }} -
-        <button class="_textButton" @click="addMissingMention()">
-          {{ i18n.ts.add }}
-        </button></MkInfo
-      >
-      <input
-        v-show="useCw"
-        ref="cwInputEl"
-        v-model="cw"
-        :class="$style.cw"
-        :placeholder="i18n.ts.annotation"
-        @keydown="onKeydown"
+  <MkStickyContainer>
+    <template #header>
+      <MkPageHeader :actions="headerActions" :tabs="headerTabs" />
+    </template>
+    <MkSpacer :content-max="800">
+      <MkPostForm
+        v-if="state === 'writing'"
+        fixed
+        :instant="true"
+        :initial-text="initialText"
+        :initial-visibility="visibility"
+        :initial-files="files"
+        :initial-local-only="localOnly"
+        :reply="reply"
+        :renote="renote"
+        :initial-visible-users="visibleUsers"
+        class="_panel"
+        @posted="state = 'posted'"
       />
-      <textarea
-        ref="textareaEl"
-        v-model="text"
-        :class="[$style.text, { [$style.withCw]: useCw }]"
-        :disabled="posting || posted"
-        :placeholder="placeholder"
-        data-cy-post-form-text
-        @keydown="onKeydown"
-        @paste="onPaste"
-        @compositionupdate="onCompositionUpdate"
-        @compositionend="onCompositionEnd"
-      />
-      <input
-        v-show="withHashtags"
-        ref="hashtagsInputEl"
-        v-model="hashtags"
-        :class="$style.hashtags"
-        :placeholder="i18n.ts.hashtags"
-        list="hashtags"
-      />
-      <XPostFormAttaches
-        v-model="files"
-        :class="$style.attaches"
-        @detach="detachFile"
-        @change-sensitive="updateFileSensitive"
-        @change-name="updateFileName"
-      />
-      <MkPollEditor v-if="poll" v-model="poll" @destroyed="poll = null" />
-      <XNotePreview v-if="showPreview" :class="$style.preview" :text="text" />
-      <footer :class="$style.footer">
-        <button
-          v-tooltip="i18n.ts.attachFile"
-          class="_button"
-          :class="$style.footerButton"
-          @click="chooseFileFrom"
-        >
-          <i class="ti ti-photo-plus"></i>
-        </button>
-        <button
-          v-tooltip="i18n.ts.poll"
-          class="_button"
-          :class="[$style.footerButton, { [$style.footerButtonActive]: poll }]"
-          @click="togglePoll"
-        >
-          <i class="ti ti-chart-arrows"></i>
-        </button>
-        <button
-          v-tooltip="i18n.ts.useCw"
-          class="_button"
-          :class="[$style.footerButton, { [$style.footerButtonActive]: useCw }]"
-          @click="useCw = !useCw"
-        >
-          <i class="ti ti-eye-off"></i>
-        </button>
-        <button
-          v-tooltip="i18n.ts.mention"
-          class="_button"
-          :class="$style.footerButton"
-          @click="insertMention"
-        >
-          <i class="ti ti-at"></i>
-        </button>
-        <button
-          v-tooltip="i18n.ts.hashtags"
-          class="_button"
-          :class="[
-            $style.footerButton,
-            { [$style.footerButtonActive]: withHashtags },
-          ]"
-          @click="withHashtags = !withHashtags"
-        >
-          <i class="ti ti-hash"></i>
-        </button>
-        <button
-          v-tooltip="i18n.ts.emoji"
-          class="_button"
-          :class="$style.footerButton"
-          @click="insertEmoji"
-        >
-          <i class="ti ti-mood-happy"></i>
-        </button>
-        <button
-          v-if="postFormActions.length > 0"
-          v-tooltip="i18n.ts.plugin"
-          class="_button"
-          :class="$style.footerButton"
-          @click="showActions"
-        >
-          <i class="ti ti-plug"></i>
-        </button>
-      </footer>
-      <datalist id="hashtags">
-        <option
-          v-for="hashtag in recentHashtags"
-          :key="hashtag"
-          :value="hashtag"
-        />
-      </datalist>
-    </div>
-  </div>
+      <MkButton
+        v-else-if="state === 'posted'"
+        primary
+        class="close"
+        @click="close()"
+      >
+        {{ i18n.ts.close }}
+      </MkButton>
+    </MkSpacer>
+  </MkStickyContainer>
 </template>
 
 <script lang="ts" setup>
-import { inject, watch, nextTick, onMounted, defineAsyncComponent } from "vue";
-import * as mfm from "mfm-js";
-import * as misskey from "misskey-js";
-import insertTextAtCursor from "insert-text-at-cursor";
-import { length } from "stringz";
-import { toASCII } from "punycode/";
+// SPECIFICATION: https://misskey-hub.net/docs/features/share-form.html
+
+import {} from "vue";
+import { noteVisibilities } from "misskey-js";
 import * as Acct from "misskey-js/built/acct";
-import { throttle } from "throttle-debounce";
-import MkNoteSimple from "@/components/MkNoteSimple.vue";
-import XNotePreview from "@/components/MkNotePreview.vue";
-import XPostFormAttaches from "@/components/MkPostFormAttaches.vue";
-import MkPollEditor from "@/components/MkPollEditor.vue";
-import { host, url } from "@/config";
-import { erase, unique } from "@/scripts/array";
-import { extractMentions } from "@/scripts/extract-mentions";
-import { formatTimeString } from "@/scripts/format-time-string";
-import { Autocomplete } from "@/scripts/autocomplete";
+import * as Misskey from "misskey-js";
+import MkButton from "@/components/MkButton.vue";
+import MkPostForm from "@/components/MkPostForm.vue";
 import * as os from "@/os";
-import { stream } from "@/stream";
-import { selectFiles } from "@/scripts/select-file";
-import { defaultStore, notePostInterruptors, postFormActions } from "@/store";
-import MkInfo from "@/components/MkInfo.vue";
+import { mainRouter } from "@/router";
+import { definePageMetadata } from "@/scripts/page-metadata";
 import { i18n } from "@/i18n";
-import { instance } from "@/instance";
-import {
-  $i,
-  notesCount,
-  incNotesCount,
-  getAccounts,
-  openAccountMenu as openAccountMenu_,
-} from "@/account";
-import { uploadFile } from "@/scripts/upload";
-import { deepClone } from "@/scripts/clone";
-import MkRippleEffect from "@/components/MkRippleEffect.vue";
-import { miLocalStorage } from "@/local-storage";
-import { claimAchievement } from "@/scripts/achievements";
 
-const modal = inject("modal");
+const urlParams = new URLSearchParams(window.location.search);
+const localOnlyQuery = urlParams.get("localOnly");
+const visibilityQuery = urlParams.get(
+  "visibility"
+) as (typeof noteVisibilities)[number];
 
-const props = withDefaults(
-  defineProps<{
-    reply?: misskey.entities.Note;
-    renote?: misskey.entities.Note;
-    channel?: any; // TODO
-    mention?: misskey.entities.User;
-    specified?: misskey.entities.User;
-    initialText?: string;
-    initialVisibility?: (typeof misskey.noteVisibilities)[number];
-    initialFiles?: misskey.entities.DriveFile[];
-    initialLocalOnly?: boolean;
-    initialVisibleUsers?: misskey.entities.User[];
-    initialNote?: misskey.entities.Note;
-    instant?: boolean;
-    fixed?: boolean;
-    autofocus?: boolean;
-    freezeAfterPosted?: boolean;
-  }>(),
-  {
-    initialVisibleUsers: () => [],
-    autofocus: true,
-  }
-);
-
-const emit = defineEmits<{
-  (ev: "posted"): void;
-  (ev: "cancel"): void;
-  (ev: "esc"): void;
-}>();
-
-const textareaEl = $shallowRef<HTMLTextAreaElement | null>(null);
-const cwInputEl = $shallowRef<HTMLInputElement | null>(null);
-const hashtagsInputEl = $shallowRef<HTMLInputElement | null>(null);
-const visibilityButton = $shallowRef<HTMLElement | null>(null);
-
-let posting = $ref(false);
-let posted = $ref(false);
-let text = $ref(props.initialText ?? "");
-let files = $ref(props.initialFiles ?? []);
-let poll = $ref<{
-  choices: string[];
-  multiple: boolean;
-  expiresAt: string | null;
-  expiredAfter: string | null;
-} | null>(null);
-let useCw = $ref(false);
-let showPreview = $ref(false);
-let cw = $ref<string | null>(null);
-let localOnly = $ref<boolean>(
-  props.initialLocalOnly ?? defaultStore.state.rememberNoteVisibility
-    ? defaultStore.state.localOnly
-    : defaultStore.state.defaultNoteLocalOnly
-);
+let state = $ref("fetching" as "fetching" | "writing" | "posted");
+let title = $ref(urlParams.get("title"));
+const text = urlParams.get("text");
+const url = urlParams.get("url");
+let initialText = $ref<string | undefined>();
+let reply = $ref<Misskey.entities.Note | undefined>();
+let renote = $ref<Misskey.entities.Note | undefined>();
 let visibility = $ref(
-  props.initialVisibility ??
-    ((defaultStore.state.rememberNoteVisibility
-      ? defaultStore.state.visibility
-      : defaultStore.state
-          .defaultNoteVisibility) as (typeof misskey.noteVisibilities)[number])
+  noteVisibilities.includes(visibilityQuery) ? visibilityQuery : undefined
 );
-let visibleUsers = $ref([]);
-if (props.initialVisibleUsers) {
-  props.initialVisibleUsers.forEach(pushVisibleUser);
-}
-let autocomplete = $ref(null);
-let draghover = $ref(false);
-let quoteId = $ref(null);
-let hasNotSpecifiedMentions = $ref(false);
-let recentHashtags = $ref(
-  JSON.parse(miLocalStorage.getItem("hashtags") || "[]")
+let localOnly = $ref(
+  localOnlyQuery === "0" ? false : localOnlyQuery === "1" ? true : undefined
 );
-let imeText = $ref("");
+let files = $ref([] as Misskey.entities.DriveFile[]);
+let visibleUsers = $ref([] as Misskey.entities.User[]);
 
-const typing = throttle(3000, () => {
-  if (props.channel) {
-    stream.send("typingOnChannel", { channel: props.channel.id });
-  }
-});
+async function init() {
+  let noteText = "";
+  if (title) noteText += `[ ${title} ]\n`;
+  // Googleニュース対策
+  if (text?.startsWith(`${title}.\n`))
+    noteText += text.replace(`${title}.\n`, "");
+  else if (text && title !== text) noteText += `${text}\n`;
+  if (url) noteText += `${url}`;
+  initialText = noteText.trim();
 
-const draftKey = $computed((): string => {
-  let key = props.channel ? `channel:${props.channel.id}` : "";
-
-  if (props.renote) {
-    key += `renote:${props.renote.id}`;
-  } else if (props.reply) {
-    key += `reply:${props.reply.id}`;
-  } else {
-    key += "note";
+  if (visibility === "specified") {
+    const visibleUserIds = urlParams.get("visibleUserIds");
+    const visibleAccts = urlParams.get("visibleAccts");
+    await Promise.all(
+      [
+        ...(visibleUserIds
+          ? visibleUserIds.split(",").map((userId) => ({ userId }))
+          : []),
+        ...(visibleAccts ? visibleAccts.split(",").map(Acct.parse) : []),
+      ]
+        // TypeScriptの指示通りに変換する
+        .map((q) =>
+          "username" in q
+            ? {
+                username: q.username,
+                host: q.host === null ? undefined : q.host,
+              }
+            : q
+        )
+        .map((q) =>
+          os.api("users/show", q).then(
+            (user) => {
+              visibleUsers.push(user);
+            },
+            () => {
+              console.error(`Invalid user query: ${JSON.stringify(q)}`);
+            }
+          )
+        )
+    );
   }
 
-  return key;
-});
-
-const placeholder = $computed((): string => {
-  if (props.renote) {
-    return i18n.ts._postForm.quotePlaceholder;
-  } else if (props.reply) {
-    return i18n.ts._postForm.replyPlaceholder;
-  } else if (props.channel) {
-    return i18n.ts._postForm.channelPlaceholder;
-  } else {
-    const xs = [
-      i18n.ts._postForm._placeholders.a,
-      i18n.ts._postForm._placeholders.b,
-      i18n.ts._postForm._placeholders.c,
-      i18n.ts._postForm._placeholders.d,
-      i18n.ts._postForm._placeholders.e,
-      i18n.ts._postForm._placeholders.f,
-    ];
-    return xs[Math.floor(Math.random() * xs.length)];
-  }
-});
-
-const submitText = $computed((): string => {
-  return props.renote
-    ? i18n.ts.quote
-    : props.reply
-    ? i18n.ts.reply
-    : i18n.ts.note;
-});
-
-const textLength = $computed((): number => {
-  return length((text + imeText).trim());
-});
-
-const maxTextLength = $computed((): number => {
-  return instance ? instance.maxNoteTextLength : 1000;
-});
-
-const canPost = $computed((): boolean => {
-  return (
-    !posting &&
-    !posted &&
-    (1 <= textLength || 1 <= files.length || !!poll || !!props.renote) &&
-    textLength <= maxTextLength &&
-    (!poll || poll.choices.length >= 2)
-  );
-});
-
-const withHashtags = $computed(
-  defaultStore.makeGetterSetter("postFormWithHashtags")
-);
-const hashtags = $computed(defaultStore.makeGetterSetter("postFormHashtags"));
-
-watch($$(text), () => {
-  checkMissingMention();
-});
-
-watch(
-  $$(visibleUsers),
-  () => {
-    checkMissingMention();
-  },
-  {
-    deep: true,
-  }
-);
-
-if (props.mention) {
-  text = props.mention.host
-    ? `@${props.mention.username}@${toASCII(props.mention.host)}`
-    : `@${props.mention.username}`;
-  text += " ";
-}
-
-if (
-  props.reply &&
-  (props.reply.user.username !== $i.username ||
-    (props.reply.user.host != null && props.reply.user.host !== host))
-) {
-  text = `@${props.reply.user.username}${
-    props.reply.user.host != null ? "@" + toASCII(props.reply.user.host) : ""
-  } `;
-}
-
-if (props.reply && props.reply.text != null) {
-  const ast = mfm.parse(props.reply.text);
-  const otherHost = props.reply.user.host;
-
-  for (const x of extractMentions(ast)) {
-    const mention = x.host
-      ? `@${x.username}@${toASCII(x.host)}`
-      : otherHost == null || otherHost === host
-      ? `@${x.username}`
-      : `@${x.username}@${toASCII(otherHost)}`;
-
-    // 自分は除外
-    if ($i.username === x.username && (x.host == null || x.host === host))
-      continue;
-
-    // 重複は除外
-    if (text.includes(`${mention} `)) continue;
-
-    text += `${mention} `;
-  }
-}
-
-if (props.channel) {
-  visibility = "public";
-  localOnly = true; // TODO: チャンネルが連合するようになった折には消す
-}
-
-// 公開以外へのリプライ時は元の公開範囲を引き継ぐ
-if (
-  props.reply &&
-  ["home", "followers", "specified"].includes(props.reply.visibility)
-) {
-  if (props.reply.visibility === "home" && visibility === "followers") {
-    visibility = "followers";
-  } else if (
-    ["home", "followers"].includes(props.reply.visibility) &&
-    visibility === "specified"
-  ) {
-    visibility = "specified";
-  } else {
-    visibility = props.reply.visibility;
-  }
-
-  if (visibility === "specified") {
-    if (props.reply.visibleUserIds) {
-      os.api("users/show", {
-        userIds: props.reply.visibleUserIds.filter(
-          (uid) => uid !== $i.id && uid !== props.reply.userId
-        ),
-      }).then((users) => {
-        users.forEach(pushVisibleUser);
+  try {
+    //#region Reply
+    const replyId = urlParams.get("replyId");
+    const replyUri = urlParams.get("replyUri");
+    if (replyId) {
+      reply = await os.api("notes/show", {
+        noteId: replyId,
       });
-    }
-
-    if (props.reply.userId !== $i.id) {
-      os.api("users/show", { userId: props.reply.userId }).then((user) => {
-        pushVisibleUser(user);
+    } else if (replyUri) {
+      const obj = await os.api("ap/show", {
+        uri: replyUri,
       });
+      if (obj.type === "Note") {
+        reply = obj.object;
+      }
     }
-  }
-}
+    //#endregion
 
-if (props.specified) {
-  visibility = "specified";
-  pushVisibleUser(props.specified);
-}
-
-// keep cw when reply
-if (defaultStore.state.keepCw && props.reply && props.reply.cw) {
-  useCw = true;
-  cw = props.reply.cw;
-}
-
-function watchForDraft() {
-  watch($$(text), () => saveDraft());
-  watch($$(useCw), () => saveDraft());
-  watch($$(cw), () => saveDraft());
-  watch($$(poll), () => saveDraft());
-  watch($$(files), () => saveDraft(), { deep: true });
-  watch($$(visibility), () => saveDraft());
-  watch($$(localOnly), () => saveDraft());
-}
-
-function checkMissingMention() {
-  if (visibility === "specified") {
-    const ast = mfm.parse(text);
-
-    for (const x of extractMentions(ast)) {
-      if (
-        !visibleUsers.some(
-          (u) => u.username === x.username && u.host === x.host
-        )
-      ) {
-        hasNotSpecifiedMentions = true;
-        return;
+    //#region Renote
+    const renoteId = urlParams.get("renoteId");
+    const renoteUri = urlParams.get("renoteUri");
+    if (renoteId) {
+      renote = await os.api("notes/show", {
+        noteId: renoteId,
+      });
+    } else if (renoteUri) {
+      const obj = await os.api("ap/show", {
+        uri: renoteUri,
+      });
+      if (obj.type === "Note") {
+        renote = obj.object;
       }
     }
-    hasNotSpecifiedMentions = false;
-  }
-}
+    //#endregion
 
-function addMissingMention() {
-  const ast = mfm.parse(text);
-
-  for (const x of extractMentions(ast)) {
-    if (
-      !visibleUsers.some((u) => u.username === x.username && u.host === x.host)
-    ) {
-      os.api("users/show", { username: x.username, host: x.host }).then(
-        (user) => {
-          visibleUsers.push(user);
-        }
+    //#region Drive files
+    const fileIds = urlParams.get("fileIds");
+    if (fileIds) {
+      await Promise.all(
+        fileIds.split(",").map((fileId) =>
+          os.api("drive/files/show", { fileId }).then(
+            (file) => {
+              files.push(file);
+            },
+            () => {
+              console.error(`Failed to fetch a file ${fileId}`);
+            }
+          )
+        )
       );
     }
-  }
-}
-
-function togglePoll() {
-  if (poll) {
-    poll = null;
-  } else {
-    poll = {
-      choices: ["", ""],
-      multiple: false,
-      expiresAt: null,
-      expiredAfter: null,
-    };
-  }
-}
-
-function addTag(tag: string) {
-  insertTextAtCursor(textareaEl, ` #${tag} `);
-}
-
-function focus() {
-  if (textareaEl) {
-    textareaEl.focus();
-    textareaEl.setSelectionRange(
-      textareaEl.value.length,
-      textareaEl.value.length
-    );
-  }
-}
-
-function chooseFileFrom(ev) {
-  selectFiles(ev.currentTarget ?? ev.target, i18n.ts.attachFile).then(
-    (files_) => {
-      for (const file of files_) {
-        files.push(file);
-      }
-    }
-  );
-}
-
-function detachFile(id) {
-  files = files.filter((x) => x.id !== id);
-}
-
-function updateFileSensitive(file, sensitive) {
-  files[files.findIndex((x) => x.id === file.id)].isSensitive = sensitive;
-}
-
-function updateFileName(file, name) {
-  files[files.findIndex((x) => x.id === file.id)].name = name;
-}
-
-function upload(file: File, name?: string) {
-  uploadFile(file, defaultStore.state.uploadFolder, name).then((res) => {
-    files.push(res);
-  });
-}
-
-function setVisibility() {
-  if (props.channel) {
-    // TODO: information dialog
-    return;
-  }
-
-  os.popup(
-    defineAsyncComponent(() => import("@/components/MkVisibilityPicker.vue")),
-    {
-      currentVisibility: visibility,
-      currentLocalOnly: localOnly,
-      src: visibilityButton,
-    },
-    {
-      changeVisibility: (v) => {
-        visibility = v;
-        if (defaultStore.state.rememberNoteVisibility) {
-          defaultStore.set("visibility", visibility);
-        }
-      },
-      changeLocalOnly: (v) => {
-        localOnly = v;
-        if (defaultStore.state.rememberNoteVisibility) {
-          defaultStore.set("localOnly", localOnly);
-        }
-      },
-    },
-    "closed"
-  );
-}
-
-function pushVisibleUser(user) {
-  if (
-    !visibleUsers.some(
-      (u) => u.username === user.username && u.host === user.host
-    )
-  ) {
-    visibleUsers.push(user);
-  }
-}
-
-function addVisibleUser() {
-  os.selectUser().then((user) => {
-    pushVisibleUser(user);
-  });
-}
-
-function removeVisibleUser(user) {
-  visibleUsers = erase(user, visibleUsers);
-}
-
-function clear() {
-  text = "";
-  files = [];
-  poll = null;
-  quoteId = null;
-}
-
-function onKeydown(ev: KeyboardEvent) {
-  if (
-    (ev.which === 10 || ev.which === 13) &&
-    (ev.ctrlKey || ev.metaKey) &&
-    canPost
-  )
-    post();
-  if (ev.which === 27) emit("esc");
-  typing();
-}
-
-function onCompositionUpdate(ev: CompositionEvent) {
-  imeText = ev.data;
-  typing();
-}
-
-function onCompositionEnd(ev: CompositionEvent) {
-  imeText = "";
-}
-
-async function onPaste(ev: ClipboardEvent) {
-  for (const { item, i } of Array.from(ev.clipboardData.items).map(
-    (item, i) => ({ item, i })
-  )) {
-    if (item.kind === "file") {
-      const file = item.getAsFile();
-      const lio = file.name.lastIndexOf(".");
-      const ext = lio >= 0 ? file.name.slice(lio) : "";
-      const formatted = `${formatTimeString(
-        new Date(file.lastModified),
-        defaultStore.state.pastedFileName
-      ).replace(/{{number}}/g, `${i + 1}`)}${ext}`;
-      upload(file, formatted);
-    }
-  }
-
-  const paste = ev.clipboardData.getData("text");
-
-  if (!props.renote && !quoteId && paste.startsWith(url + "/notes/")) {
-    ev.preventDefault();
-
-    os.confirm({
-      type: "info",
-      text: i18n.ts.quoteQuestion,
-    }).then(({ canceled }) => {
-      if (canceled) {
-        insertTextAtCursor(textareaEl, paste);
-        return;
-      }
-
-      quoteId = paste.substr(url.length).match(/^\/notes\/(.+?)\/?$/)[1];
+    //#endregion
+  } catch (err: any) {
+    os.alert({
+      type: "error",
+      title: err.message,
+      text: err.name,
     });
   }
-}
 
-function onDragover(ev) {
-  if (!ev.dataTransfer.items[0]) return;
-  const isFile = ev.dataTransfer.items[0].kind === "file";
-  const isDriveFile = ev.dataTransfer.types[0] === _DATA_TRANSFER_DRIVE_FILE_;
-  if (isFile || isDriveFile) {
-    ev.preventDefault();
-    draghover = true;
-    switch (ev.dataTransfer.effectAllowed) {
-      case "all":
-      case "uninitialized":
-      case "copy":
-      case "copyLink":
-      case "copyMove":
-        ev.dataTransfer.dropEffect = "copy";
-        break;
-      case "linkMove":
-      case "move":
-        ev.dataTransfer.dropEffect = "move";
-        break;
-      default:
-        ev.dataTransfer.dropEffect = "none";
-        break;
-    }
-  }
+  state = "writing";
 }
 
-function onDragenter(ev) {
-  draghover = true;
-}
+init();
 
-function onDragleave(ev) {
-  draghover = false;
-}
+function close(): void {
+  window.close();
 
-function onDrop(ev): void {
-  draghover = false;
-
-  // ファイルだったら
-  if (ev.dataTransfer.files.length > 0) {
-    ev.preventDefault();
-    for (const x of Array.from(ev.dataTransfer.files)) upload(x);
-    return;
-  }
-
-  //#region ドライブのファイル
-  const driveFile = ev.dataTransfer.getData(_DATA_TRANSFER_DRIVE_FILE_);
-  if (driveFile != null && driveFile !== "") {
-    const file = JSON.parse(driveFile);
-    files.push(file);
-    ev.preventDefault();
-  }
-  //#endregion
+  // 閉じなければ100ms後タイムラインに
+  window.setTimeout(() => {
+    mainRouter.push("/");
+  }, 100);
 }
 
-function saveDraft() {
-  const draftData = JSON.parse(miLocalStorage.getItem("drafts") || "{}");
+const headerActions = $computed(() => []);
 
-  draftData[draftKey] = {
-    updatedAt: new Date(),
-    data: {
-      text: text,
-      useCw: useCw,
-      cw: cw,
-      visibility: visibility,
-      localOnly: localOnly,
-      files: files,
-      poll: poll,
-    },
-  };
+const headerTabs = $computed(() => []);
 
-  miLocalStorage.setItem("drafts", JSON.stringify(draftData));
-}
-
-function deleteDraft() {
-  const draftData = JSON.parse(miLocalStorage.getItem("drafts") ?? "{}");
-
-  delete draftData[draftKey];
-
-  miLocalStorage.setItem("drafts", JSON.stringify(draftData));
-}
-
-async function post(ev?: MouseEvent) {
-  if (ev) {
-    const el = ev.currentTarget ?? ev.target;
-    const rect = el.getBoundingClientRect();
-    const x = rect.left + el.offsetWidth / 2;
-    const y = rect.top + el.offsetHeight / 2;
-    os.popup(MkRippleEffect, { x, y }, {}, "end");
-  }
-
-  const annoying =
-    text.includes("$[x2") ||
-    text.includes("$[x3") ||
-    text.includes("$[x4") ||
-    text.includes("$[scale") ||
-    text.includes("$[position");
-  if (annoying) {
-    const { canceled, result } = await os.actions({
-      type: "warning",
-      text: i18n.ts.thisPostMayBeAnnoying,
-      actions: [
-        {
-          value: "home",
-          text: i18n.ts.thisPostMayBeAnnoyingHome,
-          primary: true,
-        },
-        {
-          value: "cancel",
-          text: i18n.ts.thisPostMayBeAnnoyingCancel,
-        },
-        {
-          value: "ignore",
-          text: i18n.ts.thisPostMayBeAnnoyingIgnore,
-        },
-      ],
-    });
-
-    if (canceled) return;
-    if (result === "cancel") return;
-    if (result === "home") {
-      visibility = "home";
-    }
-  }
-
-  let postData = {
-    text: text === "" ? undefined : text,
-    fileIds: files.length > 0 ? files.map((f) => f.id) : undefined,
-    replyId: props.reply ? props.reply.id : undefined,
-    renoteId: props.renote ? props.renote.id : quoteId ? quoteId : undefined,
-    channelId: props.channel ? props.channel.id : undefined,
-    poll: poll,
-    cw: useCw ? cw ?? "" : undefined,
-    localOnly: localOnly,
-    visibility: visibility,
-    visibleUserIds:
-      visibility === "specified" ? visibleUsers.map((u) => u.id) : undefined,
-  };
-
-  if (withHashtags && hashtags && hashtags.trim() !== "") {
-    const hashtags_ = hashtags
-      .trim()
-      .split(" ")
-      .map((x) => (x.startsWith("#") ? x : "#" + x))
-      .join(" ");
-    postData.text = postData.text ? `${postData.text} ${hashtags_}` : hashtags_;
-  }
-
-  // plugin
-  if (notePostInterruptors.length > 0) {
-    for (const interruptor of notePostInterruptors) {
-      postData = await interruptor.handler(deepClone(postData));
-    }
-  }
-
-  let token = undefined;
-
-  if (postAccount) {
-    const storedAccounts = await getAccounts();
-    token = storedAccounts.find((x) => x.id === postAccount.id)?.token;
-  }
-
-  posting = true;
-  os.api("notes/create", postData, token)
-    .then(() => {
-      if (props.freezeAfterPosted) {
-        posted = true;
-      } else {
-        clear();
-      }
-      nextTick(() => {
-        deleteDraft();
-        emit("posted");
-        if (postData.text && postData.text !== "") {
-          const hashtags_ = mfm
-            .parse(postData.text)
-            .filter((x) => x.type === "hashtag")
-            .map((x) => x.props.hashtag);
-          const history = JSON.parse(
-            miLocalStorage.getItem("hashtags") || "[]"
-          ) as string[];
-          miLocalStorage.setItem(
-            "hashtags",
-            JSON.stringify(unique(hashtags_.concat(history)))
-          );
-        }
-        posting = false;
-        postAccount = null;
-
-        incNotesCount();
-        if (notesCount === 1) {
-          claimAchievement("notes1");
-        }
-
-        const text = postData.text?.toLowerCase() ?? "";
-        if (
-          (text.includes("love") || text.includes("❤")) &&
-          text.includes("misskey")
-        ) {
-          claimAchievement("iLoveMisskey");
-        }
-        if (
-          text.includes("Efrlqw8ytg4".toLowerCase()) ||
-          text.includes("XVCwzwxdHuA".toLowerCase())
-        ) {
-          claimAchievement("brainDiver");
-        }
-
-        if (props.renote && props.renote.userId === $i.id && text.length > 0) {
-          claimAchievement("selfQuote");
-        }
-
-        const date = new Date();
-        const h = date.getHours();
-        const m = date.getMinutes();
-        const s = date.getSeconds();
-        if (h >= 0 && h <= 3) {
-          claimAchievement("postedAtLateNight");
-        }
-        if (m === 0 && s === 0) {
-          claimAchievement("postedAt0min0sec");
-        }
-      });
-    })
-    .catch((err) => {
-      posting = false;
-      os.alert({
-        type: "error",
-        text: err.message + "\n" + (err as any).id,
-      });
-    });
-}
-
-function cancel() {
-  emit("cancel");
-}
-
-function insertMention() {
-  os.selectUser().then((user) => {
-    insertTextAtCursor(textareaEl, "@" + Acct.toString(user) + " ");
-  });
-}
-
-async function insertEmoji(ev: MouseEvent) {
-  os.openEmojiPicker(ev.currentTarget ?? ev.target, {}, textareaEl);
-}
-
-function showActions(ev) {
-  os.popupMenu(
-    postFormActions.map((action) => ({
-      text: action.title,
-      action: () => {
-        action.handler(
-          {
-            text: text,
-          },
-          (key, value) => {
-            if (key === "text") {
-              text = value;
-            }
-          }
-        );
-      },
-    })),
-    ev.currentTarget ?? ev.target
-  );
-}
-
-let postAccount = $ref<misskey.entities.UserDetailed | null>(null);
-
-function openAccountMenu(ev: MouseEvent) {
-  openAccountMenu_(
-    {
-      withExtraOperation: false,
-      includeCurrentAccount: true,
-      active: postAccount != null ? postAccount.id : $i.id,
-      onChoose: (account) => {
-        if (account.id === $i.id) {
-          postAccount = null;
-        } else {
-          postAccount = account;
-        }
-      },
-    },
-    ev
-  );
-}
-
-onMounted(() => {
-  if (props.autofocus) {
-    focus();
-
-    nextTick(() => {
-      focus();
-    });
-  }
-
-  // TODO: detach when unmount
-  new Autocomplete(textareaEl, $$(text));
-  new Autocomplete(cwInputEl, $$(cw));
-  new Autocomplete(hashtagsInputEl, $$(hashtags));
-
-  nextTick(() => {
-    // 書きかけの投稿を復元
-    if (!props.instant && !props.mention && !props.specified) {
-      const draft = JSON.parse(miLocalStorage.getItem("drafts") || "{}")[
-        draftKey
-      ];
-      if (draft) {
-        text = draft.data.text;
-        useCw = draft.data.useCw;
-        cw = draft.data.cw;
-        visibility = draft.data.visibility;
-        localOnly = draft.data.localOnly;
-        files = (draft.data.files || []).filter((draftFile) => draftFile);
-        if (draft.data.poll) {
-          poll = draft.data.poll;
-        }
-      }
-    }
-
-    // 削除して編集
-    if (props.initialNote) {
-      const init = props.initialNote;
-      text = init.text ? init.text : "";
-      files = init.files;
-      cw = init.cw;
-      useCw = init.cw != null;
-      if (init.poll) {
-        poll = {
-          choices: init.poll.choices.map((x) => x.text),
-          multiple: init.poll.multiple,
-          expiresAt: init.poll.expiresAt,
-          expiredAfter: init.poll.expiredAfter,
-        };
-      }
-      visibility = init.visibility;
-      localOnly = init.localOnly;
-      quoteId = init.renote ? init.renote.id : null;
-    }
-
-    nextTick(() => watchForDraft());
-  });
+definePageMetadata({
+  title: i18n.ts.share,
+  icon: "ti ti-share",
 });
-
-defineExpose({
-  clear,
-});
 </script>
 
-<style lang="scss" module>
-.root {
-  position: relative;
-
-  &.modal {
-    width: 100%;
-    max-width: 520px;
-  }
-}
-
-.header {
-  z-index: 1000;
-  height: 66px;
-}
-
-.cancel {
-  padding: 0;
-  font-size: 1em;
-  width: 64px;
-  line-height: 66px;
-}
-
-.account {
-  height: 100%;
-  aspect-ratio: 1/1;
-  display: inline-flex;
-  vertical-align: bottom;
-}
-
-.avatar {
-  width: 28px;
-  height: 28px;
-  margin: auto;
-}
-
-.headerRight {
-  position: absolute;
-  top: 0;
-  right: 0;
-}
-
-.textCount {
-  opacity: 0.7;
-  line-height: 66px;
-}
-
-.visibility {
-  height: 34px;
-  width: 34px;
-  margin: 0 0 0 8px;
-
-  & + .localOnly {
-    margin-left: 0 !important;
-  }
-}
-
-.localOnly {
-  margin: 0 0 0 12px;
-  opacity: 0.7;
-}
-
-.previewButton {
-  display: inline-block;
-  padding: 0;
-  margin: 0 8px 0 0;
-  font-size: 16px;
-  width: 34px;
-  height: 34px;
-  border-radius: 6px;
-
-  &:hover {
-    background: var(--X5);
-  }
-
-  &.previewButtonActive {
-    color: var(--accent);
-  }
-}
-
-.submit {
-  margin: 16px 16px 16px 0;
-  vertical-align: bottom;
-
-  &:disabled {
-    opacity: 0.7;
-  }
-
-  &.posting {
-    cursor: wait;
-  }
-
-  &:not(:disabled):hover {
-    > .inner {
-      background: linear-gradient(90deg, var(--X8), var(--X8));
-    }
-  }
-
-  &:not(:disabled):active {
-    > .inner {
-      background: linear-gradient(90deg, var(--X8), var(--X8));
-    }
-  }
-}
-
-.submitInner {
-  padding: 0 12px;
-  line-height: 34px;
-  font-weight: bold;
-  border-radius: 4px;
-  font-size: 0.9em;
-  min-width: 90px;
-  box-sizing: border-box;
-  color: var(--fgOnAccent);
-  background: linear-gradient(
-    90deg,
-    var(--buttonGradateA),
-    var(--buttonGradateB)
-  );
-}
-
-.form {
-}
-
-.preview {
-  padding: 16px 20px 0 20px;
-}
-
-.targetNote {
-  padding: 0 20px 16px 20px;
-}
-
-.withQuote {
-  margin: 0 0 8px 0;
-  color: var(--accent);
-}
-
-.toSpecified {
-  padding: 6px 24px;
-  margin-bottom: 8px;
-  overflow: auto;
-  white-space: nowrap;
-}
-
-.visibleUsers {
-  display: inline;
-  top: -1px;
-  font-size: 14px;
-}
-
-.visibleUser {
-  margin-right: 14px;
-  padding: 8px 0 8px 8px;
-  border-radius: 8px;
-  background: var(--X4);
-}
-
-.hasNotSpecifiedMentions {
-  margin: 0 20px 16px 20px;
-}
-
-.cw,
-.hashtags,
-.text {
-  display: block;
-  box-sizing: border-box;
-  padding: 0 24px;
-  margin: 0;
-  width: 100%;
-  font-size: 16px;
-  border: none;
-  border-radius: 0;
-  background: transparent;
-  color: var(--fg);
-  font-family: inherit;
-
-  &:focus {
-    outline: none;
-  }
-
-  &:disabled {
-    opacity: 0.5;
-  }
-}
-
-.cw {
-  z-index: 1;
-  padding-bottom: 8px;
-  border-bottom: solid 0.5px var(--divider);
-}
-
-.hashtags {
-  z-index: 1;
-  padding-top: 8px;
-  padding-bottom: 8px;
-  border-top: solid 0.5px var(--divider);
-}
-
-.text {
-  max-width: 100%;
-  min-width: 100%;
-  min-height: 90px;
-
-  &.withCw {
-    padding-top: 8px;
-  }
-}
-
-.footer {
-  padding: 0 16px 16px 16px;
-}
-
-.footerButton {
-  display: inline-block;
-  padding: 0;
-  margin: 0;
-  font-size: 1em;
-  width: 46px;
-  height: 46px;
-  border-radius: 6px;
-
-  &:hover {
-    background: var(--X5);
-  }
-
-  &.footerButtonActive {
-    color: var(--accent);
-  }
-}
-
-@container (max-width: 500px) {
-  .header {
-    height: 50px;
-
-    > .cancel {
-      width: 50px;
-      line-height: 50px;
-    }
-
-    > .headerRight {
-      > .textCount {
-        line-height: 50px;
-      }
-
-      > .submit {
-        margin: 8px;
-      }
-    }
-  }
-
-  .toSpecified {
-    padding: 6px 16px;
-  }
-
-  .cw,
-  .hashtags,
-  .text {
-    padding: 0 16px;
-  }
-
-  .text {
-    min-height: 80px;
-  }
-
-  .footer {
-    padding: 0 8px 8px 8px;
-  }
-}
-
-@container (max-width: 310px) {
-  .footerButton {
-    font-size: 14px;
-    width: 44px;
-    height: 44px;
-  }
+<style lang="scss" scoped>
+.close {
+  margin: 16px auto;
 }
 </style>
diff -ru migrateWork/components/MkRange.vue src/components/MkRange.vue
--- migrateWork/components/MkRange.vue	2023-02-19 20:26:45
+++ src/components/MkRange.vue	2023-02-18 22:55:31
@@ -266,7 +266,7 @@
           bottom: 0;
           width: $tickWidth;
           height: 3px;
-          margin-left: -math.div($tickWidth, 2);
+          margin-left: -(math.div($tickWidth, 2));
           background: var(--divider);
           border-radius: 999px;
         }
diff -ru migrateWork/components/MkReactionsViewer.reaction.vue src/components/MkReactionsViewer.reaction.vue
--- migrateWork/components/MkReactionsViewer.reaction.vue	2023-02-19 20:26:45
+++ src/components/MkReactionsViewer.reaction.vue	2023-02-18 21:58:45
@@ -31,7 +31,6 @@
 import { $i } from "@/account";
 import MkReactionEffect from "@/components/MkReactionEffect.vue";
 import { claimAchievement } from "@/scripts/achievements";
-import { defaultStore } from "@/store";
 
 const props = defineProps<{
   reaction: string;
@@ -76,7 +75,6 @@
 
 const anime = () => {
   if (document.hidden) return;
-  if (!defaultStore.state.animation) return;
 
   const rect = buttonEl.value.getBoundingClientRect();
   const x = rect.left + 16;
diff -ru migrateWork/components/MkSignin.vue src/components/MkSignin.vue
--- migrateWork/components/MkSignin.vue	2023-02-19 20:26:45
+++ src/components/MkSignin.vue	2023-02-19 19:03:12
@@ -1,111 +1,41 @@
 <template>
-  <form
-    class="eppvobhk"
-    :class="{ signing, totpLogin }"
-    @submit.prevent="onSubmit"
-  >
-    <div class="auth _gaps_m">
-      <div
-        v-show="withAvatar"
-        class="avatar"
-        :style="{
-          backgroundImage: user ? `url('${user.avatarUrl}')` : null,
-          marginBottom: message ? '1.5em' : null,
-        }"
-      ></div>
-      <MkInfo v-if="message">
-        {{ message }}
-      </MkInfo>
-      <div v-if="!totpLogin" class="normal-signin _gaps_m">
+  <form class="eppvobhk" :class="{ signing }" @submit.prevent="onSubmit">
+    <div class="normal-signin">
+      {{ i18n.ts.ririca.instance }}
+      <MkSelect v-model="instanceUrl" large model-value="misskey.io">
+        <option key="misskey.io" value="misskey.io" :selected="true">
+          Misskey.io
+        </option>
+        <option value="other">
+          {{ i18n.ts.ririca.selectInstanceYourself }}
+        </option>
+      </MkSelect>
+      <template v-if="instanceUrl === 'other'">
+        URL
         <MkInput
-          v-model="username"
-          :placeholder="i18n.ts.username"
-          type="text"
-          pattern="^[a-zA-Z0-9_]+$"
+          v-model="instanceUrlOther"
           :spellcheck="false"
-          autocomplete="username"
           autofocus
           required
-          data-cy-signin-username
-          @update:model-value="onUsernameChange"
-        >
-          <template #prefix>@</template>
-          <template #suffix>@{{ host }}</template>
-        </MkInput>
-        <MkInput
-          v-if="!user || (user && !user.usePasswordLessLogin)"
-          v-model="password"
-          :placeholder="i18n.ts.password"
-          type="password"
-          :with-password-toggle="true"
-          required
-          data-cy-signin-password
-        >
-          <template #prefix><i class="ti ti-lock"></i></template>
-          <template #caption
-            ><button class="_textButton" type="button" @click="resetPassword">
-              {{ i18n.ts.forgotPassword }}
-            </button></template
-          >
-        </MkInput>
-        <MkButton
-          type="submit"
-          large
-          primary
-          rounded
-          :disabled="signing"
-          style="margin: 0 auto"
-          >{{ signing ? i18n.ts.loggingIn : i18n.ts.login }}</MkButton
-        >
-      </div>
-      <div
-        v-if="totpLogin"
-        class="2fa-signin"
-        :class="{ securityKeys: user && user.securityKeys }"
+        />
+      </template>
+      {{ i18n.ts.ririca.accessToken }}
+      <MkInput
+        v-model="token"
+        :spellcheck="false"
+        autofocus
+        required
+        data-cy-signin-username
+      ></MkInput>
+      <MkButton
+        class="_formBlock"
+        type="submit"
+        primary
+        :disabled="signing"
+        style="margin: 0 auto"
       >
-        <div v-if="user && user.securityKeys" class="twofa-group tap-group">
-          <p>{{ i18n.ts.tapSecurityKey }}</p>
-          <MkButton v-if="!queryingKey" @click="queryKey">
-            {{ i18n.ts.retry }}
-          </MkButton>
-        </div>
-        <div v-if="user && user.securityKeys" class="or-hr">
-          <p class="or-msg">{{ i18n.ts.or }}</p>
-        </div>
-        <div class="twofa-group totp-group">
-          <p style="margin-bottom: 0">{{ i18n.ts.twoStepAuthentication }}</p>
-          <MkInput
-            v-if="user && user.usePasswordLessLogin"
-            v-model="password"
-            type="password"
-            :with-password-toggle="true"
-            required
-          >
-            <template #label>{{ i18n.ts.password }}</template>
-            <template #prefix><i class="ti ti-lock"></i></template>
-          </MkInput>
-          <MkInput
-            v-model="token"
-            type="text"
-            pattern="^[0-9]{6}$"
-            autocomplete="off"
-            :spellcheck="false"
-            required
-          >
-            <template #label>{{ i18n.ts.token }}</template>
-            <template #prefix><i class="ti ti-123"></i></template>
-          </MkInput>
-          <MkButton
-            type="submit"
-            :disabled="signing"
-            large
-            primary
-            rounded
-            style="margin: 0 auto"
-            >{{ signing ? i18n.ts.loggingIn : i18n.ts.login }}</MkButton
-          >
-        </div>
-      </div>
+        {{ signing ? i18n.ts.loggingIn : i18n.ts.login }}
+      </MkButton>
     </div>
   </form>
 </template>
@@ -117,7 +47,7 @@
 import MkButton from "@/components/MkButton.vue";
 import MkInput from "@/components/MkInput.vue";
 import MkInfo from "@/components/MkInfo.vue";
-import { apiUrl, host as configHost } from "@/config";
+import MkSelect from "@/components/MkSelect.vue";
 import { byteify, hexify } from "@/scripts/2fa";
 import * as os from "@/os";
 import { login } from "@/account";
@@ -129,14 +59,15 @@
 let username = $ref("");
 let password = $ref("");
 let token = $ref("");
-let host = $ref(toUnicode(configHost));
-let totpLogin = $ref(false);
 let credential = $ref(null);
 let challengeData = $ref(null);
 let queryingKey = $ref(false);
 let hCaptchaResponse = $ref(null);
 let reCaptchaResponse = $ref(null);
 
+const instanceUrl = $ref("");
+const instanceUrlOther = $ref("");
+
 const meta = $computed(() => instance);
 
 const emit = defineEmits<{
@@ -174,12 +105,21 @@
   );
 }
 
-function onLogin(res) {
+function onLogin(res: any) {
   if (props.autoSet) {
-    return login(res.i);
+    return login(res.i, res.instance);
   }
 }
 
+const instanceUrlResult = $computed(() => {
+  if (instanceUrl === "other") {
+    // うっかりhttps://を入れてもreplaceされるから大丈夫
+    // new URL.origin
+    return new URL("https://" + instanceUrlOther.replace("https://", ""))
+      .origin;
+  }
+  return "https://" + instanceUrl;
+});
 function queryKey() {
   queryingKey = true;
   return navigator.credentials
@@ -214,8 +154,8 @@
       });
     })
     .then((res) => {
-      emit("login", res);
-      return onLogin(res);
+      emit("login", { ...res, instance: instanceUrl });
+      return onLogin({ ...res, instance: instanceUrl });
     })
     .catch((err) => {
       if (err === null) return;
@@ -229,38 +169,10 @@
 
 function onSubmit() {
   signing = true;
-  if (!totpLogin && user && user.twoFactorEnabled) {
-    if (window.PublicKeyCredential && user.securityKeys) {
-      os.api("signin", {
-        username,
-        password,
-        "hcaptcha-response": hCaptchaResponse,
-        "g-recaptcha-response": reCaptchaResponse,
-      })
-        .then((res) => {
-          totpLogin = true;
-          signing = false;
-          challengeData = res;
-          return queryKey();
-        })
-        .catch(loginFailed);
-    } else {
-      totpLogin = true;
-      signing = false;
-    }
-  } else {
-    os.api("signin", {
-      username,
-      password,
-      "hcaptcha-response": hCaptchaResponse,
-      "g-recaptcha-response": reCaptchaResponse,
-      token: user && user.twoFactorEnabled ? token : undefined,
-    })
-      .then((res) => {
-        emit("login", res);
-        onLogin(res);
-      })
-      .catch(loginFailed);
+  console.log("submit");
+  if (!token.value) {
+    login(token, instanceUrlResult);
+    signing = false;
   }
 }
 
diff -ru migrateWork/components/MkUserPreview.vue src/components/MkUserPreview.vue
--- migrateWork/components/MkUserPreview.vue	2023-02-19 20:26:46
+++ src/components/MkUserPreview.vue	2023-02-19 18:55:14
@@ -34,9 +34,9 @@
         </div>
         <MkAvatar class="avatar" :user="user" indicator />
         <div class="title">
-          <MkA class="name" :to="userPage(user)"
-            ><MkUserName :user="user" :nowrap="false"
-          /></MkA>
+          <MkA class="name" :to="userPage(user)">
+            <MkUserName :user="user" :nowrap="false" />
+          </MkA>
           <p class="username"><MkAcct :user="user" /></p>
         </div>
         <div class="description">
diff -ru migrateWork/components/global/MkAvatar.vue src/components/global/MkAvatar.vue
--- migrateWork/components/global/MkAvatar.vue	2023-02-19 20:26:43
+++ src/components/global/MkAvatar.vue	2023-02-18 21:58:45
@@ -56,6 +56,7 @@
 import { acct, userPage } from "@/filters/user";
 import MkUserOnlineIndicator from "@/components/MkUserOnlineIndicator.vue";
 import { defaultStore } from "@/store";
+import { $i } from "@/account";
 
 const props = withDefaults(
   defineProps<{
diff -ru migrateWork/components/global/MkStickyContainer.vue src/components/global/MkStickyContainer.vue
--- migrateWork/components/global/MkStickyContainer.vue	2023-02-19 20:26:43
+++ src/components/global/MkStickyContainer.vue	2023-02-18 21:58:45
@@ -24,7 +24,10 @@
 
 let headerHeight = $ref<string | undefined>();
 let childStickyTop = $ref(0);
-const parentStickyTop = inject<Ref<number>>(CURRENT_STICKY_TOP, ref(0));
+const parentStickyTop = inject<Ref<number>>(
+  CURRENT_STICKY_TOP,
+  ref(document.querySelector<HTMLElement>("#header")?.offsetHeight)
+);
 provide(CURRENT_STICKY_TOP, $$(childStickyTop));
 
 const calc = () => {
diff -ru migrateWork/config.ts src/config.ts
--- migrateWork/config.ts	2023-02-19 20:26:47
+++ src/config.ts	2023-02-18 21:58:45
@@ -1,24 +1,19 @@
 import { miLocalStorage } from "./local-storage";
+import { $i } from "@/account";
+import { langNames } from "@/i18n";
 
-const address = new URL(location.href);
+const address = $i ? new URL($i.instanceUrl) : null;
 const siteName = (
   document.querySelector('meta[property="og:site_name"]') as HTMLMetaElement
 )?.content;
 
-export const host = address.host;
-export const hostname = address.hostname;
-export const url = address.origin;
+export const host = address?.host;
+export const hostname = address?.hostname;
+export const url = $i?.instanceUrl;
 export const apiUrl = url + "/api";
-export const wsUrl =
-  url.replace("http://", "ws://").replace("https://", "wss://") + "/streaming";
 export const lang = miLocalStorage.getItem("lang");
-export const langs = _LANGS_;
-export let locale = JSON.parse(miLocalStorage.getItem("locale"));
+export const langs = langNames;
 export const version = _VERSION_;
 export const instanceName = siteName === "Misskey" ? host : siteName;
 export const ui = miLocalStorage.getItem("ui");
 export const debug = miLocalStorage.getItem("debug") === "true";
-
-export function updateLocale(newLocale) {
-  locale = newLocale;
-}
diff -ru migrateWork/custom-emojis.ts src/custom-emojis.ts
--- migrateWork/custom-emojis.ts	2023-02-19 20:26:47
+++ src/custom-emojis.ts	2023-02-18 22:55:31
@@ -18,24 +18,26 @@
   return markRaw([...Array.from(categories), null]);
 });
 
-stream.on("emojiAdded", (emojiData) => {
-  customEmojis.value = [emojiData.emoji, ...customEmojis.value];
-});
+export function streamEmojis(stream) {
+  stream.on("emojiAdded", (emojiData) => {
+    customEmojis.value = [emojiData.emoji, ...customEmojis.value];
+  });
 
-stream.on("emojiUpdated", (emojiData) => {
-  customEmojis.value = customEmojis.value.map(
-    (item) =>
-      (emojiData.emojis.find(
-        (search) => search.name === item.name
-      ) as Misskey.entities.CustomEmoji) ?? item
-  );
-});
+  stream.on("emojiUpdated", (emojiData) => {
+    customEmojis.value = customEmojis.value.map(
+      (item) =>
+        (emojiData.emojis.find(
+          (search) => search.name === item.name
+        ) as Misskey.entities.CustomEmoji) ?? item
+    );
+  });
 
-stream.on("emojiDeleted", (emojiData) => {
-  customEmojis.value = customEmojis.value.filter(
-    (item) => !emojiData.emojis.some((search) => search.name === item.name)
-  );
-});
+  stream.on("emojiDeleted", (emojiData) => {
+    customEmojis.value = customEmojis.value.filter(
+      (item) => !emojiData.emojis.some((search) => search.name === item.name)
+    );
+  });
+}
 
 export async function fetchCustomEmojis(force = false) {
   const now = Date.now();
diff -ru migrateWork/i18n.ts src/i18n.ts
--- migrateWork/i18n.ts	2023-02-19 20:26:47
+++ src/i18n.ts	2023-02-18 21:58:45
@@ -1,9 +1,75 @@
-import { markRaw } from "vue";
-import { locale } from "@/config";
 import { I18n } from "@/scripts/i18n";
+import arSA from "@/locales/ar-SA.json";
+import csCZ from "@/locales/cs-CZ.json";
+import daDK from "@/locales/da-DK.json";
+import deDE from "@/locales/de-DE.json";
+import enUS from "@/locales/en-US.json";
+import esES from "@/locales/es-ES.json";
+import frFR from "@/locales/fr-FR.json";
+import idID from "@/locales/id-ID.json";
+import itIT from "@/locales/it-IT.json";
+import jaJP from "@/locales/ja-JP.json";
+import jaKS from "@/locales/ja-KS.json";
+import kabKAB from "@/locales/kab-KAB.json";
+import knIN from "@/locales/kn-IN.json";
+import koKR from "@/locales/ko-KR.json";
+import nlNL from "@/locales/nl-NL.json";
+import noNO from "@/locales/no-NO.json";
+import plPL from "@/locales/pl-PL.json";
+import ptPT from "@/locales/pt-PT.json";
+import ruRU from "@/locales/ru-RU.json";
+import skSK from "@/locales/sk-SK.json";
+import ugCN from "@/locales/ug-CN.json";
+import ukUA from "@/locales/uk-UA.json";
+import viVN from "@/locales/vi-VN.json";
+import zhCN from "@/locales/zh-CN.json";
+import zhTW from "@/locales/zh-TW.json";
 
-export const i18n = markRaw(new I18n(locale));
+import Fuse from "fuse.js";
 
-export function updateI18n(newLocale) {
-  i18n.ts = newLocale;
+const languages = {
+  "ar-SA": arSA,
+  "cs-CZ": csCZ,
+  "da-DK": daDK,
+  "de-DE": deDE,
+  "en-US": enUS,
+  "es-ES": esES,
+  "fr-FR": frFR,
+  "id-ID": idID,
+  "it-IT": itIT,
+  "ja-JP": jaJP,
+  "ja-KS": jaKS,
+  "kab-KAB": kabKAB,
+  "kn-IN": knIN,
+  "ko-KR": koKR,
+  "nl-NL": nlNL,
+  "no-NO": noNO,
+  "pl-PL": plPL,
+  "pt-PT": ptPT,
+  "ru-RU": ruRU,
+  "sk-SK": skSK,
+  "ug-CN": ugCN,
+  "uk-UA": ukUA,
+  "vi-VN": viVN,
+  "zh-CN": zhCN,
+  "zh-TW": zhTW,
+} as const;
+
+export let langNames = Object.keys(languages).map((l) => {
+  return [l, languages[l]._lang_];
+});
+
+export function setLanguage(lang: keyof typeof languages) {
+  console.log(lang);
+  if (Object.keys(languages).includes(lang)) {
+    i18n = new I18n(languages[lang]);
+    return lang;
+  } else {
+    const fuse = new Fuse(Object.keys(languages));
+    const results = fuse.search(lang);
+    i18n = new I18n(languages[results[0].item]);
+    console.log(results[0]);
+    return results[0].item;
+  }
 }
+export let i18n = new I18n(languages["ja-JP"]);
diff -ru migrateWork/init.ts src/init.ts
--- migrateWork/init.ts	2023-02-19 20:26:47
+++ src/init.ts	2023-02-19 18:32:27
@@ -1,9 +1,6 @@
 /**
  * Client entry point
  */
-// https://vitejs.dev/config/build-options.html#build-modulepreload
-import "vite/modulepreload-polyfill";
-
 import "@/style.scss";
 
 //#region account indexedDB migration
@@ -35,7 +32,7 @@
 import { version, ui, lang, host, updateLocale } from "@/config";
 import { applyTheme } from "@/scripts/theme";
 import { isDeviceDarkmode } from "@/scripts/is-device-darkmode";
-import { i18n, updateI18n } from "@/i18n";
+import { i18n, setLanguage } from "@/i18n";
 import { confirm, alert, post, popup, toast } from "@/os";
 import { stream } from "@/stream";
 import * as sound from "@/scripts/sound";
@@ -53,568 +50,612 @@
 import { deckStore } from "./ui/deck/deck-store";
 import { miLocalStorage } from "./local-storage";
 import { claimAchievement, claimedAchievements } from "./scripts/achievements";
-import { fetchCustomEmojis } from "./custom-emojis";
+import { fetchCustomEmojis, streamEmojis } from "./custom-emojis";
+import { Device } from "@capacitor/device";
+import lightTheme from "@/themes/_light.json5";
+import OneSignal from "onesignal-cordova-plugin";
+import { App } from "@capacitor/app";
+export let storedDeviceInfo: Object;
 
-console.info(`Misskey v${version}`);
+(async () => {
+  const res = await Device.getInfo();
+  console.log(res);
+  storedDeviceInfo = res;
+  console.info(`Misskey v${version}`);
+  const lang = await setLanguage(
+    localStorage.getItem("lang") ||
+      (await Device.getLanguageCode().value) ||
+      "ja-JP"
+  );
+  if (localStorage.getItem("lang") == null) {
+    localStorage.setItem("lang", lang);
+  }
 
-if (_DEV_) {
-  console.warn("Development mode!!!");
+  defaultStore.state.darkMode;
+  if (_DEV_) {
+    console.warn("Development mode!!!");
 
-  console.info(`vue ${vueVersion}`);
+    console.info(`vue ${vueVersion}`);
 
-  (window as any).$i = $i;
-  (window as any).$store = defaultStore;
+    (window as any).$i = $i;
+    (window as any).$store = defaultStore;
 
-  window.addEventListener("error", (event) => {
-    console.error(event);
-    /*
+    window.addEventListener("error", (event) => {
+      console.error(event);
+      /*
 		alert({
 			type: 'error',
 			title: 'DEV: Unhandled error',
 			text: event.message
 		});
 		*/
-  });
+    });
 
-  window.addEventListener("unhandledrejection", (event) => {
-    console.error(event);
-    /*
+    window.addEventListener("unhandledrejection", (event) => {
+      console.error(event);
+      /*
 		alert({
 			type: 'error',
 			title: 'DEV: Unhandled promise rejection',
 			text: event.reason
 		});
 		*/
-  });
-}
-
-//#region Detect language & fetch translations
-const localeVersion = miLocalStorage.getItem("localeVersion");
-const localeOutdated = localeVersion == null || localeVersion !== version;
-if (localeOutdated) {
-  const res = await window.fetch(`/assets/locales/${lang}.${version}.json`);
-  if (res.status === 200) {
-    const newLocale = await res.text();
-    const parsedNewLocale = JSON.parse(newLocale);
-    miLocalStorage.setItem("locale", newLocale);
-    miLocalStorage.setItem("localeVersion", version);
-    updateLocale(parsedNewLocale);
-    updateI18n(parsedNewLocale);
+    });
   }
-}
-//#endregion
 
-// タッチデバイスでCSSの:hoverを機能させる
-document.addEventListener("touchend", () => {}, { passive: true });
+  // タッチデバイスでCSSの:hoverを機能させる
+  document.addEventListener("touchend", () => {}, { passive: true });
 
-// 一斉リロード
-reloadChannel.addEventListener("message", (path) => {
-  if (path !== null) location.href = path;
-  else location.reload();
-});
+  // 一斉リロード
+  reloadChannel.addEventListener("message", (path) => {
+    if (path !== null) location.href = path;
+    else location.reload();
+  });
 
-// If mobile, insert the viewport meta tag
-if (["smartphone", "tablet"].includes(deviceKind)) {
-  const viewport = document.getElementsByName("viewport").item(0);
-  viewport.setAttribute(
-    "content",
-    `${viewport.getAttribute(
-      "content"
-    )}, minimum-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover`
-  );
-}
+  // If mobile, insert the viewport meta tag
+  if (["smartphone", "tablet"].includes(deviceKind)) {
+    const viewport = document.getElementsByName("viewport").item(0);
+    viewport.setAttribute(
+      "content",
+      `${viewport.getAttribute(
+        "content"
+      )}, minimum-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover`
+    );
+  }
 
-//#region Set lang attr
-const html = document.documentElement;
-html.setAttribute("lang", lang);
-//#endregion
+  //#region Set lang attr
+  const html = document.documentElement;
 
-//#region loginId
-const params = new URLSearchParams(location.search);
-const loginId = params.get("loginId");
+  html.setAttribute("lang", lang);
+  html.setAttribute("class", res.platform);
 
-if (loginId) {
-  const target = getUrlWithoutLoginId(location.href);
+  const css = localStorage.getItem("customCss") || "";
+  if (css) {
+    const cssNode = document.createElement("style");
+    const cssTextNode = document.createTextNode(css);
+    cssNode.appendChild(cssTextNode);
+    document.body.appendChild(cssNode);
+  }
 
-  if (!$i || $i.id !== loginId) {
-    const account = await getAccountFromId(loginId);
-    if (account) {
-      await login(account.token, target);
-    }
+  if (defaultStore.reactiveState.darkMode.value) {
+    const style = document.createElement("style");
+    style.innerText = `    --bg: rgb(12, 18, 16);`;
+    document.head.appendChild(style);
   }
 
-  history.replaceState({ misskey: "loginId" }, "", target);
-}
+  //#endregion
 
-//#endregion
+  //#region loginId
+  const params = new URLSearchParams(location.search);
+  const loginId = params.get("loginId");
 
-//#region Fetch user
-if ($i && $i.token) {
-  if (_DEV_) {
-    console.log("account cache found. refreshing...");
-  }
+  if (loginId) {
+    const target = getUrlWithoutLoginId(location.href);
 
-  refreshAccount();
-} else {
-  if (_DEV_) {
-    console.log("no account cache found.");
+    if (!$i || $i.id !== loginId) {
+      const account = await getAccountFromId(loginId);
+      if (account) {
+        await login(account.token, target);
+        await afterLoginSetup();
+      }
+    }
+
+    history.replaceState({ misskey: "loginId" }, "", target);
   }
 
-  // 連携ログインの場合用にCookieを参照する
-  const i = (document.cookie.match(/igi=(\w+)/) ?? [null, null])[1];
+  //#endregion
 
-  if (i != null && i !== "null") {
+  //#region Fetch user
+  if ($i && $i.token) {
     if (_DEV_) {
-      console.log("signing...");
+      console.log("account cache found. refreshing...");
     }
 
-    try {
-      document.body.innerHTML = "<div>Please wait...</div>";
-      await login(i);
-    } catch (err) {
-      // Render the error screen
-      // TODO: ちゃんとしたコンポーネントをレンダリングする(v10とかのトラブルシューティングゲーム付きのやつみたいな)
-      document.body.innerHTML = '<div id="err">Oops!</div>';
-    }
+    await refreshAccount();
+    await afterLoginSetup();
   } else {
     if (_DEV_) {
-      console.log("not signed in");
+      console.log("no account cache found.");
     }
-  }
-}
-//#endregion
 
-const fetchInstanceMetaPromise = fetchInstance();
+    // 連携ログインの場合用にCookieを参照する
+    const i = (document.cookie.match(/igi=(\w+)/) ?? [null, null])[1];
 
-fetchInstanceMetaPromise.then(() => {
-  miLocalStorage.setItem("v", instance.version);
+    if (i != null && i !== "null") {
+      if (_DEV_) {
+        console.log("signing...");
+      }
 
-  // Init service worker
-  initializeSw();
-});
+      try {
+        document.body.innerHTML = "<div>Please wait...</div>";
+        await login(i, $);
+      } catch (err) {
+        // Render the error screen
+        // TODO: ちゃんとしたコンポーネントをレンダリングする(v10とかのトラブルシューティングゲーム付きのやつみたいな)
+        document.body.innerHTML = '<div id="err">Oops!</div>';
+      }
+    } else {
+      if (_DEV_) {
+        console.log("not signed in");
+      }
+      applyTheme(lightTheme);
+    }
+  }
+  //#endregion
 
-try {
-  await fetchCustomEmojis();
-} catch (err) {}
+  const app = createApp(
+    window.location.search === "?zen"
+      ? defineAsyncComponent(() => import("@/ui/zen.vue"))
+      : !$i
+      ? defineAsyncComponent(() => import("@/ui/visitor.vue"))
+      : ui === "deck"
+      ? defineAsyncComponent(() => import("@/ui/deck.vue"))
+      : ui === "classic"
+      ? defineAsyncComponent(() => import("@/ui/classic.vue"))
+      : defineAsyncComponent(() => import("@/ui/universal.vue"))
+  );
 
-const app = createApp(
-  window.location.search === "?zen"
-    ? defineAsyncComponent(() => import("@/ui/zen.vue"))
-    : !$i
-    ? defineAsyncComponent(() => import("@/ui/visitor.vue"))
-    : ui === "deck"
-    ? defineAsyncComponent(() => import("@/ui/deck.vue"))
-    : ui === "classic"
-    ? defineAsyncComponent(() => import("@/ui/classic.vue"))
-    : defineAsyncComponent(() => import("@/ui/universal.vue"))
-);
+  if (_DEV_) {
+    app.config.performance = true;
+    app.config.errorHandler = function (err, instance, info) {
+      console.error(info, err, instance);
+    };
+  }
 
-if (_DEV_) {
-  app.config.performance = true;
-}
+  // TODO: 廃止
+  app.config.globalProperties = {
+    $i,
+    $store: defaultStore,
+    $instance: instance,
+    $t: i18n.t,
+    $ts: i18n.ts,
+  };
 
-// TODO: 廃止
-app.config.globalProperties = {
-  $i,
-  $store: defaultStore,
-  $instance: instance,
-  $t: i18n.t,
-  $ts: i18n.ts,
-};
+  widgets(app);
+  directives(app);
+  components(app);
 
-widgets(app);
-directives(app);
-components(app);
+  const splash = document.getElementById("splash");
+  // 念のためnullチェック(HTMLが古い場合があるため(そのうち消す))
+  if (splash)
+    splash.addEventListener("transitionend", () => {
+      splash.remove();
+    });
 
-const splash = document.getElementById("splash");
-// 念のためnullチェック(HTMLが古い場合があるため(そのうち消す))
-if (splash)
-  splash.addEventListener("transitionend", () => {
-    splash.remove();
-  });
+  await deckStore.ready;
 
-await deckStore.ready;
+  // https://github.com/misskey-dev/misskey/pull/8575#issuecomment-1114239210
+  // なぜかinit.tsの内容が2回実行されることがあるため、mountするdivを1つに制限する
+  const rootEl = (() => {
+    const MISSKEY_MOUNT_DIV_ID = "misskey_app";
 
-// https://github.com/misskey-dev/misskey/pull/8575#issuecomment-1114239210
-// なぜかinit.tsの内容が2回実行されることがあるため、mountするdivを1つに制限する
-const rootEl = (() => {
-  const MISSKEY_MOUNT_DIV_ID = "misskey_app";
+    const currentEl = document.getElementById(MISSKEY_MOUNT_DIV_ID);
 
-  const currentEl = document.getElementById(MISSKEY_MOUNT_DIV_ID);
+    if (currentEl) {
+      console.warn("multiple import detected");
+      return currentEl;
+    }
 
-  if (currentEl) {
-    console.warn("multiple import detected");
-    return currentEl;
-  }
+    const rootEl = document.createElement("div");
+    rootEl.id = MISSKEY_MOUNT_DIV_ID;
+    document.body.appendChild(rootEl);
+    return rootEl;
+  })();
 
-  const rootEl = document.createElement("div");
-  rootEl.id = MISSKEY_MOUNT_DIV_ID;
-  document.body.appendChild(rootEl);
-  return rootEl;
-})();
+  app.mount(rootEl);
 
-app.mount(rootEl);
+  // boot.jsのやつを解除
+  window.onerror = null;
+  window.onunhandledrejection = null;
 
-// boot.jsのやつを解除
-window.onerror = null;
-window.onunhandledrejection = null;
+  reactionPicker.init();
 
-reactionPicker.init();
+  if (splash) {
+    splash.style.opacity = "0";
+    splash.style.pointerEvents = "none";
+  }
 
-if (splash) {
-  splash.style.opacity = "0";
-  splash.style.pointerEvents = "none";
-}
+  // クライアントが更新されたか？
+  const lastVersion = miLocalStorage.getItem("lastVersion");
+  if (lastVersion !== version) {
+    miLocalStorage.setItem("lastVersion", version);
 
-// クライアントが更新されたか？
-const lastVersion = miLocalStorage.getItem("lastVersion");
-if (lastVersion !== version) {
-  miLocalStorage.setItem("lastVersion", version);
+    // テーマリビルドするため
+    miLocalStorage.removeItem("theme");
 
-  // テーマリビルドするため
-  miLocalStorage.removeItem("theme");
-
-  try {
-    // 変なバージョン文字列来るとcompareVersionsでエラーになるため
-    if (lastVersion != null && compareVersions(version, lastVersion) === 1) {
-      // ログインしてる場合だけ
-      if ($i) {
-        popup(
-          defineAsyncComponent(() => import("@/components/MkUpdated.vue")),
-          {},
-          {},
-          "closed"
-        );
+    try {
+      // 変なバージョン文字列来るとcompareVersionsでエラーになるため
+      if (lastVersion != null && compareVersions(version, lastVersion) === 1) {
+        // ログインしてる場合だけ
+        if ($i) {
+          popup(
+            defineAsyncComponent(() => import("@/components/MkUpdated.vue")),
+            {},
+            {},
+            "closed"
+          );
+        }
       }
-    }
-  } catch (err) {}
-}
+    } catch (err) {}
+  }
 
-await defaultStore.ready;
+  await defaultStore.ready;
 
-// NOTE: この処理は必ず↑のクライアント更新時処理より後に来ること(テーマ再構築のため)
-watch(
-  defaultStore.reactiveState.darkMode,
-  (darkMode) => {
-    applyTheme(
-      darkMode
-        ? ColdDeviceStorage.get("darkTheme")
-        : ColdDeviceStorage.get("lightTheme")
-    );
-  },
-  { immediate: miLocalStorage.getItem("theme") == null }
-);
+  App.addListener("backButton", (canGoBack) => {
+    if (canGoBack) {
+      history.back();
+    } else {
+      App.exitApp();
+    }
+  });
+})();
 
-const darkTheme = computed(ColdDeviceStorage.makeGetterSetter("darkTheme"));
-const lightTheme = computed(ColdDeviceStorage.makeGetterSetter("lightTheme"));
+async function afterLoginSetup() {
+  if (!$i) return;
+  const hotkeys = {
+    d: (): void => {
+      defaultStore.set("darkMode", !defaultStore.state.darkMode);
+    },
+    s: search,
+    ["p|n"]: post,
+  };
+  applyTheme(
+    defaultStore.state.darkMode
+      ? ColdDeviceStorage.get("darkTheme")
+      : ColdDeviceStorage.get("lightTheme")
+  );
+  // shortcut
+  document.addEventListener("keydown", makeHotkey(hotkeys));
+  reactionPicker.init();
+  const fetchInstanceMetaPromise = fetchInstance();
 
-watch(darkTheme, (theme) => {
-  if (defaultStore.state.darkMode) {
-    applyTheme(theme);
+  fetchInstanceMetaPromise.then(() => {
+    miLocalStorage.setItem("v", instance.version);
+  });
+  try {
+    await fetchCustomEmojis();
+  } catch (err) {
+    console.error(err);
   }
-});
+  // NOTE: この処理は必ず↑のクライアント更新時処理より後に来ること(テーマ再構築のため)
+  watch(
+    defaultStore.reactiveState.darkMode,
+    (darkMode) => {
+      applyTheme(
+        darkMode
+          ? ColdDeviceStorage.get("darkTheme")
+          : ColdDeviceStorage.get("lightTheme")
+      );
+    },
+    { immediate: miLocalStorage.getItem("theme") == null }
+  );
 
-watch(lightTheme, (theme) => {
-  if (!defaultStore.state.darkMode) {
-    applyTheme(theme);
-  }
-});
+  const darkTheme = computed(ColdDeviceStorage.makeGetterSetter("darkTheme"));
+  const lightTheme = computed(ColdDeviceStorage.makeGetterSetter("lightTheme"));
 
-//#region Sync dark mode
-if (ColdDeviceStorage.get("syncDeviceDarkMode")) {
-  defaultStore.set("darkMode", isDeviceDarkmode());
-}
+  watch(darkTheme, (theme) => {
+    if (defaultStore.state.darkMode) {
+      applyTheme(theme);
+    }
+  });
 
-window.matchMedia("(prefers-color-scheme: dark)").addListener((mql) => {
+  watch(lightTheme, (theme) => {
+    if (!defaultStore.state.darkMode) {
+      applyTheme(theme);
+    }
+  });
+
+  //#region Sync dark mode
   if (ColdDeviceStorage.get("syncDeviceDarkMode")) {
-    defaultStore.set("darkMode", mql.matches);
+    defaultStore.set("darkMode", isDeviceDarkmode());
   }
-});
-//#endregion
 
-fetchInstanceMetaPromise.then(() => {
-  if (defaultStore.state.themeInitial) {
-    if (instance.defaultLightTheme != null)
-      ColdDeviceStorage.set(
-        "lightTheme",
-        JSON5.parse(instance.defaultLightTheme)
+  window.matchMedia("(prefers-color-scheme: dark)").addListener((mql) => {
+    if (ColdDeviceStorage.get("syncDeviceDarkMode")) {
+      defaultStore.set("darkMode", mql.matches);
+    }
+  });
+  //#endregion
+
+  watch(
+    defaultStore.reactiveState.useBlurEffectForModal,
+    (v) => {
+      document.documentElement.style.setProperty(
+        "--modalBgFilter",
+        v ? "blur(4px)" : "none"
       );
-    if (instance.defaultDarkTheme != null)
-      ColdDeviceStorage.set(
-        "darkTheme",
-        JSON5.parse(instance.defaultDarkTheme)
-      );
-    defaultStore.set("themeInitial", false);
-  }
-});
+    },
+    { immediate: true }
+  );
 
-watch(
-  defaultStore.reactiveState.useBlurEffectForModal,
-  (v) => {
-    document.documentElement.style.setProperty(
-      "--modalBgFilter",
-      v ? "blur(4px)" : "none"
-    );
-  },
-  { immediate: true }
-);
+  watch(
+    defaultStore.reactiveState.useBlurEffect,
+    (v) => {
+      if (v) {
+        document.documentElement.style.removeProperty("--blur");
+      } else {
+        document.documentElement.style.setProperty("--blur", "none");
+      }
+    },
+    { immediate: true }
+  );
 
-watch(
-  defaultStore.reactiveState.useBlurEffect,
-  (v) => {
-    if (v) {
-      document.documentElement.style.removeProperty("--blur");
-    } else {
-      document.documentElement.style.setProperty("--blur", "none");
-    }
-  },
-  { immediate: true }
-);
-
-let reloadDialogShowing = false;
-stream.on("_disconnected_", async () => {
-  if (defaultStore.state.serverDisconnectedBehavior === "reload") {
-    location.reload();
-  } else if (defaultStore.state.serverDisconnectedBehavior === "dialog") {
-    if (reloadDialogShowing) return;
-    reloadDialogShowing = true;
-    const { canceled } = await confirm({
-      type: "warning",
-      title: i18n.ts.disconnectedFromServer,
-      text: i18n.ts.reloadConfirm,
-    });
-    reloadDialogShowing = false;
-    if (!canceled) {
+  streamEmojis(stream);
+  let reloadDialogShowing = false;
+  stream.on("_disconnected_", async () => {
+    if (defaultStore.state.serverDisconnectedBehavior === "reload") {
       location.reload();
+    } else if (defaultStore.state.serverDisconnectedBehavior === "dialog") {
+      if (reloadDialogShowing) return;
+      reloadDialogShowing = true;
+      const { canceled } = await confirm({
+        type: "warning",
+        title: i18n.ts.disconnectedFromServer,
+        text: i18n.ts.reloadConfirm,
+      });
+      reloadDialogShowing = false;
+      if (!canceled) {
+        location.reload();
+      }
     }
-  }
-});
-
-for (const plugin of ColdDeviceStorage.get("plugins").filter((p) => p.active)) {
-  import("./plugin").then(({ install }) => {
-    install(plugin);
   });
-}
 
-const hotkeys = {
-  d: (): void => {
-    defaultStore.set("darkMode", !defaultStore.state.darkMode);
-  },
-  s: search,
-};
-
-if ($i) {
-  // only add post shortcuts if logged in
-  hotkeys["p|n"] = post;
-
-  if ($i.isDeleted) {
-    alert({
-      type: "warning",
-      text: i18n.ts.accountDeletionInProgress,
+  for (const plugin of ColdDeviceStorage.get("plugins").filter(
+    (p) => p.active
+  )) {
+    import("./plugin").then(({ install }) => {
+      install(plugin);
     });
   }
 
-  const now = new Date();
-  const m = now.getMonth() + 1;
-  const d = now.getDate();
+  if ($i) {
+    // only add post shortcuts if logged in
+    hotkeys["p|n"] = post;
 
-  if ($i.birthday) {
-    const bm = parseInt($i.birthday.split("-")[1]);
-    const bd = parseInt($i.birthday.split("-")[2]);
-    if (m === bm && d === bd) {
-      claimAchievement("loggedInOnBirthday");
+    if ($i.isDeleted) {
+      alert({
+        type: "warning",
+        text: i18n.ts.accountDeletionInProgress,
+      });
     }
-  }
 
-  if (m === 1 && d === 1) {
-    claimAchievement("loggedInOnNewYearsDay");
-  }
+    const now = new Date();
+    const m = now.getMonth() + 1;
+    const d = now.getDate();
 
-  if ($i.loggedInDays >= 3) claimAchievement("login3");
-  if ($i.loggedInDays >= 7) claimAchievement("login7");
-  if ($i.loggedInDays >= 15) claimAchievement("login15");
-  if ($i.loggedInDays >= 30) claimAchievement("login30");
-  if ($i.loggedInDays >= 60) claimAchievement("login60");
-  if ($i.loggedInDays >= 100) claimAchievement("login100");
-  if ($i.loggedInDays >= 200) claimAchievement("login200");
-  if ($i.loggedInDays >= 300) claimAchievement("login300");
-  if ($i.loggedInDays >= 400) claimAchievement("login400");
-  if ($i.loggedInDays >= 500) claimAchievement("login500");
-  if ($i.loggedInDays >= 600) claimAchievement("login600");
-  if ($i.loggedInDays >= 700) claimAchievement("login700");
-  if ($i.loggedInDays >= 800) claimAchievement("login800");
-  if ($i.loggedInDays >= 900) claimAchievement("login900");
-  if ($i.loggedInDays >= 1000) claimAchievement("login1000");
+    if ($i.birthday) {
+      const bm = parseInt($i.birthday.split("-")[1]);
+      const bd = parseInt($i.birthday.split("-")[2]);
+      if (m === bm && d === bd) {
+        claimAchievement("loggedInOnBirthday");
+      }
+    }
 
-  if ($i.notesCount > 0) claimAchievement("notes1");
-  if ($i.notesCount >= 10) claimAchievement("notes10");
-  if ($i.notesCount >= 100) claimAchievement("notes100");
-  if ($i.notesCount >= 500) claimAchievement("notes500");
-  if ($i.notesCount >= 1000) claimAchievement("notes1000");
-  if ($i.notesCount >= 5000) claimAchievement("notes5000");
-  if ($i.notesCount >= 10000) claimAchievement("notes10000");
-  if ($i.notesCount >= 20000) claimAchievement("notes20000");
-  if ($i.notesCount >= 30000) claimAchievement("notes30000");
-  if ($i.notesCount >= 40000) claimAchievement("notes40000");
-  if ($i.notesCount >= 50000) claimAchievement("notes50000");
-  if ($i.notesCount >= 60000) claimAchievement("notes60000");
-  if ($i.notesCount >= 70000) claimAchievement("notes70000");
-  if ($i.notesCount >= 80000) claimAchievement("notes80000");
-  if ($i.notesCount >= 90000) claimAchievement("notes90000");
-  if ($i.notesCount >= 100000) claimAchievement("notes100000");
+    if (m === 1 && d === 1) {
+      claimAchievement("loggedInOnNewYearsDay");
+    }
 
-  if ($i.followersCount > 0) claimAchievement("followers1");
-  if ($i.followersCount >= 10) claimAchievement("followers10");
-  if ($i.followersCount >= 50) claimAchievement("followers50");
-  if ($i.followersCount >= 100) claimAchievement("followers100");
-  if ($i.followersCount >= 300) claimAchievement("followers300");
-  if ($i.followersCount >= 500) claimAchievement("followers500");
-  if ($i.followersCount >= 1000) claimAchievement("followers1000");
+    if ($i.loggedInDays >= 3) claimAchievement("login3");
+    if ($i.loggedInDays >= 7) claimAchievement("login7");
+    if ($i.loggedInDays >= 15) claimAchievement("login15");
+    if ($i.loggedInDays >= 30) claimAchievement("login30");
+    if ($i.loggedInDays >= 60) claimAchievement("login60");
+    if ($i.loggedInDays >= 100) claimAchievement("login100");
+    if ($i.loggedInDays >= 200) claimAchievement("login200");
+    if ($i.loggedInDays >= 300) claimAchievement("login300");
+    if ($i.loggedInDays >= 400) claimAchievement("login400");
+    if ($i.loggedInDays >= 500) claimAchievement("login500");
+    if ($i.loggedInDays >= 600) claimAchievement("login600");
+    if ($i.loggedInDays >= 700) claimAchievement("login700");
+    if ($i.loggedInDays >= 800) claimAchievement("login800");
+    if ($i.loggedInDays >= 900) claimAchievement("login900");
+    if ($i.loggedInDays >= 1000) claimAchievement("login1000");
 
-  if (
-    Date.now() - new Date($i.createdAt).getTime() >
-    1000 * 60 * 60 * 24 * 365
-  ) {
-    claimAchievement("passedSinceAccountCreated1");
-  }
-  if (
-    Date.now() - new Date($i.createdAt).getTime() >
-    1000 * 60 * 60 * 24 * 365 * 2
-  ) {
-    claimAchievement("passedSinceAccountCreated2");
-  }
-  if (
-    Date.now() - new Date($i.createdAt).getTime() >
-    1000 * 60 * 60 * 24 * 365 * 3
-  ) {
-    claimAchievement("passedSinceAccountCreated3");
-  }
+    if ($i.notesCount > 0) claimAchievement("notes1");
+    if ($i.notesCount >= 10) claimAchievement("notes10");
+    if ($i.notesCount >= 100) claimAchievement("notes100");
+    if ($i.notesCount >= 500) claimAchievement("notes500");
+    if ($i.notesCount >= 1000) claimAchievement("notes1000");
+    if ($i.notesCount >= 5000) claimAchievement("notes5000");
+    if ($i.notesCount >= 10000) claimAchievement("notes10000");
+    if ($i.notesCount >= 20000) claimAchievement("notes20000");
+    if ($i.notesCount >= 30000) claimAchievement("notes30000");
+    if ($i.notesCount >= 40000) claimAchievement("notes40000");
+    if ($i.notesCount >= 50000) claimAchievement("notes50000");
+    if ($i.notesCount >= 60000) claimAchievement("notes60000");
+    if ($i.notesCount >= 70000) claimAchievement("notes70000");
+    if ($i.notesCount >= 80000) claimAchievement("notes80000");
+    if ($i.notesCount >= 90000) claimAchievement("notes90000");
+    if ($i.notesCount >= 100000) claimAchievement("notes100000");
 
-  if (claimedAchievements.length >= 30) {
-    claimAchievement("collectAchievements30");
-  }
+    if ($i.followersCount > 0) claimAchievement("followers1");
+    if ($i.followersCount >= 10) claimAchievement("followers10");
+    if ($i.followersCount >= 50) claimAchievement("followers50");
+    if ($i.followersCount >= 100) claimAchievement("followers100");
+    if ($i.followersCount >= 300) claimAchievement("followers300");
+    if ($i.followersCount >= 500) claimAchievement("followers500");
+    if ($i.followersCount >= 1000) claimAchievement("followers1000");
 
-  window.setInterval(() => {
-    if (Math.floor(Math.random() * 20000) === 0) {
-      claimAchievement("justPlainLucky");
+    if (
+      Date.now() - new Date($i.createdAt).getTime() >
+      1000 * 60 * 60 * 24 * 365
+    ) {
+      claimAchievement("passedSinceAccountCreated1");
     }
-  }, 1000 * 10);
-
-  window.setTimeout(() => {
-    claimAchievement("client30min");
-  }, 1000 * 60 * 30);
-
-  const lastUsed = miLocalStorage.getItem("lastUsed");
-  if (lastUsed) {
-    const lastUsedDate = parseInt(lastUsed, 10);
-    // 二時間以上前なら
-    if (Date.now() - lastUsedDate > 1000 * 60 * 60 * 2) {
-      toast(
-        i18n.t("welcomeBackWithName", {
-          name: $i.name || $i.username,
-        })
-      );
+    if (
+      Date.now() - new Date($i.createdAt).getTime() >
+      1000 * 60 * 60 * 24 * 365 * 2
+    ) {
+      claimAchievement("passedSinceAccountCreated2");
     }
-  }
-  miLocalStorage.setItem("lastUsed", Date.now().toString());
-
-  const latestDonationInfoShownAt = miLocalStorage.getItem(
-    "latestDonationInfoShownAt"
-  );
-  const neverShowDonationInfo = miLocalStorage.getItem("neverShowDonationInfo");
-  if (
-    neverShowDonationInfo !== "true" &&
-    new Date($i.createdAt).getTime() < Date.now() - 1000 * 60 * 60 * 24 * 3
-  ) {
     if (
-      latestDonationInfoShownAt == null ||
-      new Date(latestDonationInfoShownAt).getTime() <
-        Date.now() - 1000 * 60 * 60 * 24 * 30
+      Date.now() - new Date($i.createdAt).getTime() >
+      1000 * 60 * 60 * 24 * 365 * 3
     ) {
-      popup(
-        defineAsyncComponent(() => import("@/components/MkDonation.vue")),
-        {},
-        {},
-        "closed"
-      );
+      claimAchievement("passedSinceAccountCreated3");
     }
-  }
 
-  if ("Notification" in window) {
-    // 許可を得ていなかったらリクエスト
-    if (Notification.permission === "default") {
-      Notification.requestPermission();
+    if (claimedAchievements.length >= 30) {
+      claimAchievement("collectAchievements30");
     }
-  }
 
-  const main = markRaw(stream.useChannel("main", null, "System"));
+    window.setInterval(() => {
+      if (Math.floor(Math.random() * 20000) === 0) {
+        claimAchievement("justPlainLucky");
+      }
+    }, 1000 * 10);
 
-  // 自分の情報が更新されたとき
-  main.on("meUpdated", (i) => {
-    updateAccount(i);
-  });
+    window.setTimeout(() => {
+      claimAchievement("client30min");
+    }, 1000 * 60 * 30);
 
-  main.on("readAllNotifications", () => {
-    updateAccount({ hasUnreadNotification: false });
-  });
+    const lastUsed = miLocalStorage.getItem("lastUsed");
+    if (lastUsed) {
+      const lastUsedDate = parseInt(lastUsed, 10);
+      // 二時間以上前なら
+      if (Date.now() - lastUsedDate > 1000 * 60 * 60 * 2) {
+        toast(
+          i18n.t("welcomeBackWithName", {
+            name: $i.name || $i.username,
+          })
+        );
+      }
+    }
+    miLocalStorage.setItem("lastUsed", Date.now().toString());
 
-  main.on("unreadNotification", () => {
-    updateAccount({ hasUnreadNotification: true });
-  });
+    const latestDonationInfoShownAt = miLocalStorage.getItem(
+      "latestDonationInfoShownAt"
+    );
 
-  main.on("unreadMention", () => {
-    updateAccount({ hasUnreadMentions: true });
-  });
+    if ("Notification" in window) {
+      // 許可を得ていなかったらリクエスト
+      if (Notification.permission === "default") {
+        Notification.requestPermission();
+      }
+    }
 
-  main.on("readAllUnreadMentions", () => {
-    updateAccount({ hasUnreadMentions: false });
-  });
+    const main = markRaw(stream.useChannel("main", null, "System"));
 
-  main.on("unreadSpecifiedNote", () => {
-    updateAccount({ hasUnreadSpecifiedNotes: true });
-  });
+    // 自分の情報が更新されたとき
+    main.on("meUpdated", (i) => {
+      updateAccount(i);
+    });
 
-  main.on("readAllUnreadSpecifiedNotes", () => {
-    updateAccount({ hasUnreadSpecifiedNotes: false });
-  });
+    main.on("readAllNotifications", () => {
+      updateAccount({ hasUnreadNotification: false });
+    });
 
-  main.on("readAllMessagingMessages", () => {
-    updateAccount({ hasUnreadMessagingMessage: false });
-  });
+    main.on("unreadNotification", () => {
+      updateAccount({ hasUnreadNotification: true });
+    });
 
-  main.on("unreadMessagingMessage", () => {
-    updateAccount({ hasUnreadMessagingMessage: true });
-    sound.play("chatBg");
-  });
+    main.on("unreadMention", () => {
+      updateAccount({ hasUnreadMentions: true });
+    });
 
-  main.on("readAllAntennas", () => {
-    updateAccount({ hasUnreadAntenna: false });
-  });
+    main.on("readAllUnreadMentions", () => {
+      updateAccount({ hasUnreadMentions: false });
+    });
 
-  main.on("unreadAntenna", () => {
-    updateAccount({ hasUnreadAntenna: true });
-    sound.play("antenna");
-  });
+    main.on("unreadSpecifiedNote", () => {
+      updateAccount({ hasUnreadSpecifiedNotes: true });
+    });
 
-  main.on("readAllAnnouncements", () => {
-    updateAccount({ hasUnreadAnnouncement: false });
-  });
+    main.on("readAllUnreadSpecifiedNotes", () => {
+      updateAccount({ hasUnreadSpecifiedNotes: false });
+    });
 
-  main.on("readAllChannels", () => {
-    updateAccount({ hasUnreadChannel: false });
-  });
+    main.on("readAllMessagingMessages", () => {
+      updateAccount({ hasUnreadMessagingMessage: false });
+    });
 
-  main.on("unreadChannel", () => {
-    updateAccount({ hasUnreadChannel: true });
-    sound.play("channel");
-  });
+    main.on("unreadMessagingMessage", () => {
+      updateAccount({ hasUnreadMessagingMessage: true });
+      sound.play("chatBg");
+    });
 
-  // トークンが再生成されたとき
-  // このままではMisskeyが利用できないので強制的にサインアウトさせる
-  main.on("myTokenRegenerated", () => {
-    signout();
+    main.on("readAllAntennas", () => {
+      updateAccount({ hasUnreadAntenna: false });
+    });
+
+    main.on("unreadAntenna", () => {
+      updateAccount({ hasUnreadAntenna: true });
+      sound.play("antenna");
+    });
+
+    main.on("readAllAnnouncements", () => {
+      updateAccount({ hasUnreadAnnouncement: false });
+    });
+
+    main.on("readAllChannels", () => {
+      updateAccount({ hasUnreadChannel: false });
+    });
+
+    main.on("unreadChannel", () => {
+      updateAccount({ hasUnreadChannel: true });
+      sound.play("channel");
+    });
+
+    // トークンが再生成されたとき
+    // このままではMisskeyが利用できないので強制的にサインアウトさせる
+    main.on("myTokenRegenerated", () => {
+      signout();
+    });
+  }
+
+  // shortcut
+  document.addEventListener("keydown", makeHotkey(hotkeys));
+
+  if (storedDeviceInfo.platform == "web") return;
+  OneSignal.setAppId(import.meta.env.VITE_ONE_SIGNAL_APP_ID);
+  const deviceId = await Device.getId();
+  OneSignal.setExternalUserId(deviceId.uuid);
+  const res = await fetch(import.meta.env.VITE_NOTIFICATION_TOKEN_ENDPOINT, {
+    method: "POST", // *GET, POST, PUT, DELETE, etc.
+    mode: "cors", // no-cors, *cors, same-origin
+    cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
+    credentials: "same-origin", // include, *same-origin, omit
+    headers: {
+      "Content-Type": "application/json",
+    },
+    redirect: "follow", // manual, *follow, error
+    referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
+    body: JSON.stringify({
+      misskey_token: $i.token,
+      device_id: deviceId.uuid,
+      instance_url: $i.instanceUrl,
+    }), // 本体のデータ型は "Content-Type" ヘッダーと一致させる必要があります
+  }).catch((err) => {
+    console.error(err);
+    // throw err
   });
+  console.info(res);
+  OneSignal.setNotificationOpenedHandler(function (jsonData) {
+    console.log("notificationOpenedCallback: " + JSON.stringify(jsonData));
+  });
+  // Prompts the user for notification permissions.
+  //    * Since this shows a generic native prompt, we recommend instead using an In-App Message to prompt for notification permission (See step 7) to better communicate to your users what notifications they will get.
+  OneSignal.promptForPushNotificationsWithUserResponse(function (accepted) {
+    console.log("User accepted notifications: " + accepted);
+  });
 }
-
-// shortcut
-document.addEventListener("keydown", makeHotkey(hotkeys));
diff -ru migrateWork/instance.ts src/instance.ts
--- migrateWork/instance.ts	2023-02-19 20:26:47
+++ src/instance.ts	2023-02-18 21:58:45
@@ -28,3 +28,46 @@
 
   miLocalStorage.setItem("instance", JSON.stringify(instance));
 }
+
+/**
+export const instance: Misskey.entities.InstanceMetadata = reactive(
+	instanceData
+		? JSON.parse(instanceData)
+		: {
+			// TODO: set default values
+		}
+);
+
+export async function fetchInstance() {
+	const meta = await noCredentialApi.request("meta", {
+		detail: false,
+	});
+
+	for (const [k, v] of Object.entries(meta)) {
+		instance[k] = v;
+	}
+
+	localStorage.setItem("instance", JSON.stringify(instance));
+}
+
+export const emojiCategories = computed(() => {
+	if (instance.emojis == null) return [];
+	const categories = new Set();
+	for (const emoji of instance.emojis) {
+		categories.add(emoji.category);
+	}
+	return Array.from(categories);
+});
+
+export const emojiTags = computed(() => {
+	if (instance.emojis == null) return [];
+	const tags = new Set();
+	for (const emoji of instance.emojis) {
+		for (const tag of emoji.aliases) {
+			tags.add(tag);
+		}
+	}
+	return Array.from(tags);
+});
+
+ */
Only in src: locales
Only in src: miauth.ts
diff -ru migrateWork/navbar.ts src/navbar.ts
--- migrateWork/navbar.ts	2023-02-19 20:26:47
+++ src/navbar.ts	2023-02-18 21:58:45
@@ -105,7 +105,7 @@
   },
   achievements: {
     title: i18n.ts.achievements,
-    icon: "ti ti-medal",
+    icon: "ti ti-military-award",
     show: computed(() => $i != null),
     to: "/my/achievements",
   },
diff -ru migrateWork/os.ts src/os.ts
--- migrateWork/os.ts	2023-02-19 20:26:47
+++ src/os.ts	2023-02-18 21:58:45
@@ -1,7 +1,5 @@
 // TODO: なんでもかんでもos.tsに突っ込むのやめたいのでよしなに分割する
 
-import { pendingApiRequestsCount, api, apiGet } from "@/scripts/api";
-export { pendingApiRequestsCount, api, apiGet };
 import { Component, markRaw, Ref, ref, defineAsyncComponent } from "vue";
 import { EventEmitter } from "eventemitter3";
 import insertTextAtCursor from "insert-text-at-cursor";
@@ -19,10 +17,46 @@
 import { MenuItem } from "@/types/menu";
 import copyToClipboard from "./scripts/copy-to-clipboard";
 
+import { $i } from "@/account";
 export const openingWindowsCount = ref(0);
 
+const apiClient = new Misskey.api.APIClient({
+  origin: $i?.instanceUrl,
+  credential: $i?.token,
+});
+
+export const noCredentialApi = new Misskey.api.APIClient({
+  origin: $i?.instanceUrl || window.location.origin,
+});
+
+export const api = ((
+  endpoint: keyof Misskey.Endpoints,
+  data: Record<string, any> = {}
+) => {
+  return apiClient.request(endpoint, data);
+}) as typeof apiClient.request;
+
+export const apiGet = ((
+  endpoint: keyof Misskey.Endpoints,
+  data: Record<string, any> = {}
+) => {
+  const query = new URLSearchParams(data);
+
+  const promise = new Promise((resolve, reject) => {
+    // Send request
+    apiClient
+      .request(endpoint, { ...data })
+      .then(async (res) => {
+        resolve(res);
+      })
+      .catch(reject);
+  });
+
+  return promise;
+}) as typeof apiClient.request;
+
 export const apiWithDialog = ((
-  endpoint: string,
+  endpoint: keyof Misskey.Endpoints,
   data: Record<string, any> = {},
   token?: string | null | undefined
 ) => {
diff -ru migrateWork/pages/about.emojis.vue src/pages/about.emojis.vue
--- migrateWork/pages/about.emojis.vue	2023-02-19 20:26:47
+++ src/pages/about.emojis.vue	2023-02-18 21:58:45
@@ -1,7 +1,7 @@
 <template>
   <div class="driuhtrh _gaps">
     <MkButton
-      v-if="$i && ($i.isModerator || $i.policies.canManageCustomEmojis)"
+      v-if="$i && ($i.isModerator || $i?.policies?.canManageCustomEmojis)"
       primary
       link
       to="/custom-emojis-manager"
diff -ru migrateWork/pages/about.vue src/pages/about.vue
--- migrateWork/pages/about.vue	2023-02-19 20:26:47
+++ src/pages/about.vue	2023-02-18 21:58:45
@@ -120,7 +120,7 @@
 import { ref, computed, watch } from "vue";
 import XEmojis from "./about.emojis.vue";
 import XFederation from "./about.federation.vue";
-import { version, instanceName, host } from "@/config";
+import { instanceName, host } from "@/config";
 import FormLink from "@/components/form/link.vue";
 import FormSection from "@/components/form/section.vue";
 import FormSuspense from "@/components/form/suspense.vue";
@@ -132,6 +132,10 @@
 import { i18n } from "@/i18n";
 import { definePageMetadata } from "@/scripts/page-metadata";
 import { claimAchievement } from "@/scripts/achievements";
+import { miLocalStorage } from "@/local-storage";
+import { instance } from "@/instance";
+
+const version = miLocalStorage.getItem("v");
 
 const props = withDefaults(
   defineProps<{
diff -ru migrateWork/pages/achievements.vue src/pages/achievements.vue
--- migrateWork/pages/achievements.vue	2023-02-19 20:26:47
+++ src/pages/achievements.vue	2023-02-18 21:58:45
@@ -47,7 +47,7 @@
 
 definePageMetadata({
   title: i18n.ts.achievements,
-  icon: "ti ti-medal",
+  icon: "ti ti-military-award",
 });
 </script>
 
Only in src/pages/admin: integrations.discord.vue
Only in src/pages/admin: integrations.github.vue
Only in src/pages/admin: integrations.twitter.vue
Only in src/pages/admin: integrations.vue
diff -ru migrateWork/pages/admin/object-storage.vue src/pages/admin/object-storage.vue
--- migrateWork/pages/admin/object-storage.vue	2023-02-19 20:26:47
+++ src/pages/admin/object-storage.vue	2023-02-18 21:58:45
@@ -52,7 +52,7 @@
                 <template #label>Access key</template>
               </MkInput>
 
-              <MkInput v-model="objectStorageSecretKey" type="password">
+              <MkInput v-model="objectStorageSecretKey">
                 <template #prefix><i class="ti ti-key"></i></template>
                 <template #label>Secret key</template>
               </MkInput>
diff -ru migrateWork/pages/messaging/index.vue src/pages/messaging/index.vue
--- migrateWork/pages/messaging/index.vue	2023-02-19 20:26:48
+++ src/pages/messaging/index.vue	2023-02-19 18:55:18
@@ -1,13 +1,13 @@
 <template>
   <MkStickyContainer>
-    <template #header
-      ><MkPageHeader :actions="headerActions" :tabs="headerTabs"
-    /></template>
+    <template #header>
+      <MkPageHeader :actions="headerActions" :tabs="headerTabs" />
+    </template>
     <MkSpacer :content-max="800">
       <div class="yweeujhr">
-        <MkButton primary class="start" @click="start"
-          ><i class="ti ti-plus"></i> {{ $ts.startMessaging }}</MkButton
-        >
+        <MkButton primary class="start" @click="start">
+          <i class="ti ti-plus"></i> {{ $ts.startMessaging }}
+        </MkButton>
 
         <div v-if="messages.length > 0" class="history">
           <MkA
diff -ru migrateWork/pages/messaging/messaging-room.form.vue src/pages/messaging/messaging-room.form.vue
--- migrateWork/pages/messaging/messaging-room.form.vue	2023-02-19 20:26:48
+++ src/pages/messaging/messaging-room.form.vue	2023-02-19 19:23:18
@@ -1,10 +1,10 @@
 <template>
   <div :class="$style['root']" @dragover.stop="onDragover" @drop.stop="onDrop">
     <textarea
-      :class="$style['textarea']"
-      class="_acrylic"
       ref="textEl"
       v-model="text"
+      :class="$style['textarea']"
+      class="_acrylic"
       :placeholder="i18n.ts.inputMessageHere"
       @keydown="onKeydown"
       @compositionupdate="onCompositionUpdate"
@@ -34,8 +34,8 @@
       </div>
     </footer>
     <input
-      :class="$style['file-input']"
       ref="fileEl"
+      :class="$style['file-input']"
       type="file"
       @change="onChangeFile"
     />
diff -ru migrateWork/pages/messaging/messaging-room.vue src/pages/messaging/messaging-room.vue
--- migrateWork/pages/messaging/messaging-room.vue	2023-02-19 20:26:48
+++ src/pages/messaging/messaging-room.vue	2023-02-19 18:55:18
@@ -61,8 +61,8 @@
           <div v-show="showIndicator" :class="$style['new-message']">
             <button
               class="_buttonPrimary"
-              @click="onIndicatorClick"
               :class="$style['new-message-button']"
+              @click="onIndicatorClick"
             >
               <i
                 class="fas ti-fw fa-arrow-circle-down"
Only in src/pages: mfm-cheat-sheet.vue
diff -ru migrateWork/pages/my-antennas/editor.vue src/pages/my-antennas/editor.vue
--- migrateWork/pages/my-antennas/editor.vue	2023-02-19 20:26:48
+++ src/pages/my-antennas/editor.vue	2023-02-19 19:23:18
@@ -27,12 +27,12 @@
         </MkSelect>
         <MkTextarea v-else-if="src === 'users'" v-model="users">
           <template #label>{{ i18n.ts.users }}</template>
-          <template #caption
-            >{{ i18n.ts.antennaUsersDescription }}
+          <template #caption>
+            {{ i18n.ts.antennaUsersDescription }}
             <button class="_textButton" @click="addUser">
               {{ i18n.ts.addUser }}
-            </button></template
-          >
+            </button>
+          </template>
         </MkTextarea>
         <MkSwitch v-model="withReplies">{{ i18n.ts.withReplies }}</MkSwitch>
         <MkTextarea v-model="keywords">
@@ -48,16 +48,17 @@
         <MkSwitch v-model="notify">{{ i18n.ts.notifyAntenna }}</MkSwitch>
       </div>
       <div class="actions">
-        <MkButton inline primary @click="saveAntenna()"
-          ><i class="ti ti-device-floppy"></i> {{ i18n.ts.save }}</MkButton
-        >
+        <MkButton inline primary @click="saveAntenna()">
+          <i class="ti ti-device-floppy"></i> {{ i18n.ts.save }}
+        </MkButton>
         <MkButton
           v-if="antenna.id != null"
           inline
           danger
           @click="deleteAntenna()"
-          ><i class="ti ti-trash"></i> {{ i18n.ts.delete }}</MkButton
         >
+          <i class="ti ti-trash"></i> {{ i18n.ts.delete }}
+        </MkButton>
       </div>
     </div>
   </MkSpacer>
diff -ru migrateWork/pages/settings/accounts.vue src/pages/settings/accounts.vue
--- migrateWork/pages/settings/accounts.vue	2023-02-19 20:26:49
+++ src/pages/settings/accounts.vue	2023-02-18 22:55:31
@@ -2,9 +2,9 @@
   <div class="">
     <FormSuspense :p="init">
       <div class="_gaps">
-        <MkButton primary @click="addAccount"
-          ><i class="ti ti-plus"></i> {{ i18n.ts.addAccount }}</MkButton
-        >
+        <MkButton primary @click="addAccount">
+          <i class="ti ti-plus"></i> {{ i18n.ts.addAccount }}
+        </MkButton>
 
         <div
           v-for="account in accounts"
@@ -20,7 +20,7 @@
               <MkUserName :user="account" />
             </div>
             <div class="acct">
-              <MkAcct :user="account" />
+              <MkAcct :user="account" :detail="true" />
             </div>
           </div>
         </div>
@@ -43,22 +43,28 @@
 } from "@/account";
 import { i18n } from "@/i18n";
 import { definePageMetadata } from "@/scripts/page-metadata";
+import { api } from "misskey-js";
 
 const storedAccounts = ref<any>(null);
-const accounts = ref<any>(null);
+const accounts = ref<any>([]);
 
 const init = async () => {
-  getAccounts()
-    .then((accounts) => {
-      storedAccounts.value = accounts.filter((x) => x.id !== $i!.id);
-
-      return os.api("users/show", {
-        userIds: storedAccounts.value.map((x) => x.id),
+  await getAccounts().then(async (ac) => {
+    return ac
+      .filter((x) => x.id !== $i!.id)
+      .forEach(async (a) => {
+        accounts.value.push({
+          ...(await new api.APIClient({
+            origin: a.instanceUrl,
+            credential: a.token,
+          }).request("users/show", {
+            userId: a.id,
+          })),
+          host: a.instanceUrl,
+        });
       });
-    })
-    .then((response) => {
-      accounts.value = response;
-    });
+  });
+  return Promise.resolve();
 };
 
 function menu(account, ev) {
Only in src/pages/settings: accounts.vue.orig
Only in src/pages/settings: accounts.vue.rej
diff -ru migrateWork/pages/settings/index.vue src/pages/settings/index.vue
--- migrateWork/pages/settings/index.vue	2023-02-19 20:26:49
+++ src/pages/settings/index.vue	2023-02-18 21:58:45
@@ -8,12 +8,6 @@
         <div class="body">
           <div v-if="!narrow || currentPage?.route.name == null" class="nav">
             <div class="baaadecd">
-              <MkInfo v-if="emailNotConfigured" warn class="info"
-                >{{ i18n.ts.emailNotConfiguredWarning }}
-                <MkA to="/settings/email" class="_link">{{
-                  i18n.ts.configure
-                }}</MkA></MkInfo
-              >
               <MkSuperMenu
                 :def="menuDef"
                 :grid="currentPage?.route.name == null"
Only in src/pages/settings: integration.vue
diff -ru migrateWork/pages/share.vue src/pages/share.vue
--- migrateWork/pages/share.vue	2023-02-19 20:26:49
+++ src/pages/share.vue	2023-02-19 18:55:19
@@ -1,8 +1,8 @@
 <template>
   <MkStickyContainer>
-    <template #header
-      ><MkPageHeader :actions="headerActions" :tabs="headerTabs"
-    /></template>
+    <template #header>
+      <MkPageHeader :actions="headerActions" :tabs="headerTabs" />
+    </template>
     <MkSpacer :content-max="800">
       <MkPostForm
         v-if="state === 'writing'"
@@ -23,8 +23,9 @@
         primary
         class="close"
         @click="close()"
-        >{{ i18n.ts.close }}</MkButton
       >
+        {{ i18n.ts.close }}
+      </MkButton>
     </MkSpacer>
   </MkStickyContainer>
 </template>
diff -ru migrateWork/pages/timeline.vue src/pages/timeline.vue
--- migrateWork/pages/timeline.vue	2023-02-19 20:26:49
+++ src/pages/timeline.vue	2023-02-18 22:55:31
@@ -1,19 +1,15 @@
 <template>
   <MkStickyContainer>
-    <template #header
-      ><MkPageHeader
+    <template #header>
+      <MkPageHeader
         v-model:tab="src"
         :actions="headerActions"
         :tabs="$i ? headerTabs : headerTabsWhenNotLogin"
         :display-my-avatar="true"
-    /></template>
+      />
+    </template>
     <MkSpacer :content-max="800">
       <div ref="rootEl" v-hotkey.global="keymap">
-        <XTutorial
-          v-if="$i && $store.reactiveState.tutorial.value != -1"
-          class="_panel"
-          style="margin-bottom: var(--margin)"
-        />
         <MkPostForm
           v-if="$store.reactiveState.showFixedPostForm.value"
           :class="$style.postForm"
@@ -53,17 +49,16 @@
 import { $i } from "@/account";
 import { definePageMetadata } from "@/scripts/page-metadata";
 import type { Tab } from "@/components/global/MkPageHeader.tabs.vue";
+import { Camera } from "@capacitor/camera";
 
 provide("shouldOmitHeaderTitle", true);
 
 const XTutorial = defineAsyncComponent(() => import("./timeline.tutorial.vue"));
 
 const isLocalTimelineAvailable =
-  ($i == null && instance.policies.ltlAvailable) ||
-  ($i != null && $i.policies.ltlAvailable);
+  ($i == null && instance.policies.ltlAvailable) || $i != null;
 const isGlobalTimelineAvailable =
-  ($i == null && instance.policies.gtlAvailable) ||
-  ($i != null && $i.policies.gtlAvailable);
+  ($i == null && instance.policies.gtlAvailable) || $i != null;
 const keymap = {
   t: focus,
 };
@@ -238,6 +233,11 @@
         : "ti ti-home",
   }))
 );
+
+const permissionState = await Camera.checkPermissions();
+if (!permissionState.camera) {
+  Camera.requestPermissions({ permissions: ["photos", "camera"] });
+}
 </script>
 
 <style lang="scss" module>
diff -ru migrateWork/pages/user/followers.vue src/pages/user/followers.vue
--- migrateWork/pages/user/followers.vue	2023-02-19 20:26:49
+++ src/pages/user/followers.vue	2023-02-19 18:55:19
@@ -1,8 +1,8 @@
 <template>
   <MkStickyContainer>
-    <template #header
-      ><MkPageHeader :actions="headerActions" :tabs="headerTabs"
-    /></template>
+    <template #header>
+      <MkPageHeader :actions="headerActions" :tabs="headerTabs" />
+    </template>
     <MkSpacer :content-max="1000">
       <Transition name="fade" mode="out-in">
         <div v-if="user">
diff -ru migrateWork/pages/user/following.vue src/pages/user/following.vue
--- migrateWork/pages/user/following.vue	2023-02-19 20:26:49
+++ src/pages/user/following.vue	2023-02-19 18:55:19
@@ -1,8 +1,8 @@
 <template>
   <MkStickyContainer>
-    <template #header
-      ><MkPageHeader :actions="headerActions" :tabs="headerTabs"
-    /></template>
+    <template #header>
+      <MkPageHeader :actions="headerActions" :tabs="headerTabs" />
+    </template>
     <MkSpacer :content-max="1000">
       <Transition name="fade" mode="out-in">
         <div v-if="user">
diff -ru migrateWork/pages/user/index.vue src/pages/user/index.vue
--- migrateWork/pages/user/index.vue	2023-02-19 20:26:49
+++ src/pages/user/index.vue	2023-02-19 19:23:19
@@ -1,11 +1,12 @@
 <template>
   <MkStickyContainer>
-    <template #header
-      ><MkPageHeader
+    <template #header>
+      <MkPageHeader
         v-model:tab="tab"
         :actions="headerActions"
         :tabs="headerTabs"
-    /></template>
+      />
+    </template>
     <div>
       <Transition name="fade" mode="out-in">
         <div v-if="user">
diff -ru migrateWork/pages/welcome.entrance.a.vue src/pages/welcome.entrance.a.vue
--- migrateWork/pages/welcome.entrance.a.vue	2023-02-19 20:26:50
+++ src/pages/welcome.entrance.a.vue	2023-02-18 22:55:31
@@ -1,8 +1,6 @@
 <template>
-  <div v-if="meta" class="rsqzvsbo">
+  <div class="rsqzvsbo">
     <div class="top">
-      <MkFeaturedPhotos class="bg" />
-      <XTimeline class="tl" />
       <div class="shape1"></div>
       <div class="shape2"></div>
       <img src="/client-assets/misskey.svg" class="misskey" />
@@ -14,114 +12,94 @@
         <MkEmoji :normal="true" :no-style="true" emoji="🍮" />
       </div>
       <div class="main">
-        <img
-          :src="$instance.iconUrl || $instance.faviconUrl || '/favicon.ico'"
-          alt=""
-          class="icon"
-        />
         <button class="_button _acrylic menu" @click="showMenu">
           <i class="ti ti-dots"></i>
         </button>
+
         <div class="fg">
-          <h1>
+          <h1 style="pointer-events: none">
             <!-- 背景色によってはロゴが見えなくなるのでとりあえず無効に -->
             <!-- <img class="logo" v-if="meta.logoImageUrl" :src="meta.logoImageUrl"><span v-else class="text">{{ instanceName }}</span> -->
-            <span class="text">{{ instanceName }}</span>
+            <span class="text">{{ $ts.ririca.name }}</span>
           </h1>
           <div class="about">
             <!-- eslint-disable-next-line vue/no-v-html -->
-            <div
-              class="desc"
-              v-html="meta.description || i18n.ts.headlineMisskey"
-            ></div>
+            <div class="desc" v-html="$ts.ririca.description"></div>
           </div>
           <div class="action">
+            <div>
+              <input id="term" v-model="isTerm" type="checkbox" /><label
+                for="term"
+              >
+                {{ $ts.ririca.term }}</label
+              ><br />
+              <a href="https://riinswork.space/missRirica/privacy/">{{
+                $ts.ririca.termLink
+              }}</a>
+            </div>
+
+            <!--					<MkButton inline rounded gradate data-cy-signup style="margin-right: 12px;" @click="signup()">{{ i18n.ts.signup }}</MkButton>-->
             <MkButton
               inline
               rounded
-              gradate
-              data-cy-signup
-              style="margin-right: 12px"
-              @click="signup()"
-              >{{ i18n.ts.signup }}</MkButton
+              data-cy-signin
+              :disabled="!isTerm"
+              @click="signin()"
             >
-            <MkButton inline rounded data-cy-signin @click="signin()">{{
-              i18n.ts.login
-            }}</MkButton>
+              {{ i18n.ts.login }}
+            </MkButton>
+
+            <MkSelect v-model="lang">
+              <template #label>{{ i18n.ts.uiLanguage }}</template>
+              <p>{{ lang }}</p>
+              <p>{{ langs }}</p>
+              <option
+                v-for="x in langs"
+                :key="x[0]"
+                :value="x[0]"
+                :selected="x[0] === lang"
+              >
+                {{ x[1] }}
+              </option>
+              <template #caption>
+                <I18n :src="i18n.ts.i18nInfo" tag="span">
+                  <template #link>
+                    <MkLink url="https://crowdin.com/project/misskey">
+                      Crowdin
+                    </MkLink>
+                  </template>
+                </I18n>
+              </template>
+            </MkSelect>
           </div>
         </div>
       </div>
-      <div v-if="instances" class="federation">
-        <MarqueeText :duration="40">
-          <MkA
-            v-for="instance in instances"
-            :key="instance.id"
-            :class="$style.federationInstance"
-            :to="`/instance-info/${instance.host}`"
-            behavior="window"
-          >
-            <!--<MkInstanceCardMini :instance="instance"/>-->
-            <img
-              v-if="instance.iconUrl"
-              class="icon"
-              :src="instance.iconUrl"
-              alt=""
-            />
-            <span class="name _monospace">{{ instance.host }}</span>
-          </MkA>
-        </MarqueeText>
-      </div>
     </div>
   </div>
 </template>
 
 <script lang="ts" setup>
-import {} from "vue";
-import { toUnicode } from "punycode/";
-import XTimeline from "./welcome.timeline.vue";
-import MarqueeText from "@/components/MkMarquee.vue";
 import XSigninDialog from "@/components/MkSigninDialog.vue";
-import XSignupDialog from "@/components/MkSignupDialog.vue";
 import MkButton from "@/components/MkButton.vue";
-import XNote from "@/components/MkNote.vue";
-import MkFeaturedPhotos from "@/components/MkFeaturedPhotos.vue";
-import { host, instanceName } from "@/config";
+import MkSelect from "@/components/MkSelect.vue";
+import MkLink from "@/components/MkLink.vue";
 import * as os from "@/os";
-import number from "@/filters/number";
 import { i18n } from "@/i18n";
+import { ref, watch } from "vue";
+import { miLocalStorage } from "@/local-storage";
+import { langs as _langs } from "@/config";
+import { unisonReload } from "@/scripts/unison-reload";
 
+const langs = ref(_langs);
+const lang = ref(miLocalStorage.getItem("lang"));
+
 let meta = $ref();
 let stats = $ref();
 let tags = $ref();
 let onlineUsersCount = $ref();
 let instances = $ref();
+let isTerm = $ref();
 
-os.api("meta", { detail: true }).then((_meta) => {
-  meta = _meta;
-});
-
-os.api("stats").then((_stats) => {
-  stats = _stats;
-});
-
-os.api("get-online-users-count").then((res) => {
-  onlineUsersCount = res.count;
-});
-
-os.api("hashtags/list", {
-  sort: "+mentionedLocalUsers",
-  limit: 8,
-}).then((_tags) => {
-  tags = _tags;
-});
-
-os.api("federation/instances", {
-  sort: "+pubSub",
-  limit: 20,
-}).then((_instances) => {
-  instances = _instances;
-});
-
 function signin() {
   os.popup(
     XSigninDialog,
@@ -133,17 +111,6 @@
   );
 }
 
-function signup() {
-  os.popup(
-    XSignupDialog,
-    {
-      autoSet: true,
-    },
-    {},
-    "closed"
-  );
-}
-
 function showMenu(ev) {
   os.popupMenu(
     [
@@ -173,6 +140,25 @@
     ev.currentTarget ?? ev.target
   );
 }
+
+watch(lang, () => {
+  miLocalStorage.setItem("lang", lang.value as string);
+  miLocalStorage.removeItem("locale");
+});
+
+watch([lang], async () => {
+  await reloadAsk();
+});
+
+async function reloadAsk() {
+  const { canceled } = await os.confirm({
+    type: "info",
+    text: i18n.ts.reloadToApplySetting,
+  });
+  if (canceled) return;
+
+  unisonReload();
+}
 </script>
 
 <style lang="scss" scoped>
@@ -296,9 +282,6 @@
       }
 
       > .fg {
-        position: relative;
-        z-index: 1;
-
         > h1 {
           display: block;
           margin: 0;
diff -ru migrateWork/pages/welcome.entrance.c.vue src/pages/welcome.entrance.c.vue
--- migrateWork/pages/welcome.entrance.c.vue	2023-02-19 20:26:50
+++ src/pages/welcome.entrance.c.vue	2023-02-18 21:58:45
@@ -80,7 +80,6 @@
 import MkButton from "@/components/MkButton.vue";
 import XNote from "@/components/MkNote.vue";
 import MkFeaturedPhotos from "@/components/MkFeaturedPhotos.vue";
-import XTimeline from "./welcome.timeline.vue";
 import { host, instanceName } from "@/config";
 import * as os from "@/os";
 import number from "@/filters/number";
@@ -90,7 +89,6 @@
     MkButton,
     XNote,
     MkFeaturedPhotos,
-    XTimeline,
   },
 
   data() {
diff -ru migrateWork/pages/welcome.vue src/pages/welcome.vue
--- migrateWork/pages/welcome.vue	2023-02-19 20:26:50
+++ src/pages/welcome.vue	2023-02-18 21:58:45
@@ -1,32 +1,7 @@
 <template>
-  <div v-if="meta">
-    <XSetup v-if="meta.requireSetup" />
-    <XEntrance v-else />
-  </div>
+  <XEntrance />
 </template>
 
 <script lang="ts" setup>
-import { computed } from "vue";
-import XSetup from "./welcome.setup.vue";
 import XEntrance from "./welcome.entrance.a.vue";
-import { instanceName } from "@/config";
-import * as os from "@/os";
-import { definePageMetadata } from "@/scripts/page-metadata";
-
-let meta = $ref(null);
-
-os.api("meta", { detail: true }).then((res) => {
-  meta = res;
-});
-
-const headerActions = $computed(() => []);
-
-const headerTabs = $computed(() => []);
-
-definePageMetadata(
-  computed(() => ({
-    title: instanceName,
-    icon: null,
-  }))
-);
 </script>
diff -ru migrateWork/pizzax.ts src/pizzax.ts
--- migrateWork/pizzax.ts	2023-02-19 20:26:50
+++ src/pizzax.ts	2023-02-18 21:58:45
@@ -32,7 +32,6 @@
 };
 
 const connection = $i && stream.useChannel("main");
-
 export class Storage<T extends StateDef> {
   public readonly ready: Promise<void>;
   public readonly loaded: Promise<void>;
@@ -178,29 +177,6 @@
         // api関数と循環参照なので一応setTimeoutしておく
         window.setTimeout(async () => {
           await defaultStore.ready;
-
-          api("i/registry/get-all", { scope: ["client", this.key] })
-            .then((kvs) => {
-              const cache: Partial<T> = {};
-              for (const [k, v] of Object.entries(this.def) as [
-                keyof T,
-                T[keyof T]["default"]
-              ][]) {
-                if (v.where === "account") {
-                  if (Object.prototype.hasOwnProperty.call(kvs, k)) {
-                    this.reactiveState[k].value = this.state[k] = (
-                      kvs as Partial<T>
-                    )[k];
-                    cache[k] = (kvs as Partial<T>)[k];
-                  } else {
-                    this.reactiveState[k].value = this.state[k] = v.default;
-                  }
-                }
-              }
-
-              return set(this.registryCacheKeyName, cache);
-            })
-            .then(() => resolve());
         }, 1);
       } else {
         resolve();
@@ -250,11 +226,6 @@
           const cache = (await get(this.registryCacheKeyName)) || {};
           cache[key] = rawValue;
           await set(this.registryCacheKeyName, cache);
-          await api("i/registry/set", {
-            scope: ["client", this.key],
-            key: key.toString(),
-            value: rawValue,
-          });
           break;
         }
       }
diff -ru migrateWork/scripts/aiscript/ui.ts src/scripts/aiscript/ui.ts
--- migrateWork/scripts/aiscript/ui.ts	2023-02-19 20:26:50
+++ src/scripts/aiscript/ui.ts	2023-02-18 21:58:45
@@ -342,7 +342,7 @@
   if (primary) utils.assertBoolean(primary);
   const rounded = def.value.get("rounded");
   if (rounded) utils.assertBoolean(rounded);
-  const disabled = def.value.get("disabled");
+  const disabled = button.value.get("disabled");
   if (disabled) utils.assertBoolean(disabled);
 
   return {
diff -ru migrateWork/scripts/emoji-base.ts src/scripts/emoji-base.ts
--- migrateWork/scripts/emoji-base.ts	2023-02-19 20:26:50
+++ src/scripts/emoji-base.ts	2023-02-18 21:58:45
@@ -6,7 +6,7 @@
   if (!codes.includes("200d")) codes = codes.filter((x) => x !== "fe0f");
   codes = codes.filter((x) => x && x.length);
   const fileName = codes.join("-");
-  return `${twemojiSvgBase}/${fileName}.svg`;
+  return `https://misskey.io/${twemojiSvgBase}/${fileName}.svg`;
 }
 
 export function char2fluentEmojiFilePath(char: string): string {
@@ -16,5 +16,5 @@
   if (!codes.includes("200d")) codes = codes.filter((x) => x !== "fe0f");
   codes = codes.filter((x) => x && x.length);
   const fileName = codes.map((x) => x!.padStart(4, "0")).join("-");
-  return `${fluentEmojiPngBase}/${fileName}.png`;
+  return `https://misskey.io/${fluentEmojiPngBase}/${fileName}.png`;
 }
diff -ru migrateWork/scripts/sound.ts src/scripts/sound.ts
--- migrateWork/scripts/sound.ts	2023-02-19 20:26:50
+++ src/scripts/sound.ts	2023-02-18 21:58:45
@@ -1,7 +1,5 @@
 import { ColdDeviceStorage } from "@/store";
 
-const cache = new Map<string, HTMLAudioElement>();
-
 export const soundsTypes = [
   null,
   "syuilo/up",
@@ -34,15 +32,19 @@
   "noizenecio/kick_gaba7",
 ] as const;
 
-export function getAudio(file: string, useCache = true): HTMLAudioElement {
-  let audio: HTMLAudioElement;
+const cache = new Map<string, AudioBuffer>();
+const ctx = new AudioContext();
+
+export async function getAudio(file: string, useCache = true) {
   if (useCache && cache.has(file)) {
-    audio = cache.get(file);
-  } else {
-    audio = new Audio(`/client-assets/sounds/${file}.mp3`);
-    if (useCache) cache.set(file, audio);
+    return cache.get(file);
   }
-  return audio;
+
+  const response = await fetch(`/client-assets/sounds/${file}.mp3`);
+  const arrayBuffer = await response.arrayBuffer();
+  const audioBuffer = await ctx.decodeAudioData(arrayBuffer);
+  if (useCache) cache.set(file, audioBuffer);
+  return audioBuffer;
 }
 
 export function setVolume(
@@ -50,6 +52,7 @@
   volume: number
 ): HTMLAudioElement {
   const masterVolume = ColdDeviceStorage.get("sound_masterVolume");
+
   audio.volume = masterVolume - (1 - volume) * masterVolume;
   return audio;
 }
@@ -60,10 +63,14 @@
   playFile(sound.type, sound.volume);
 }
 
-export function playFile(file: string, volume: number) {
+export async function playFile(file: string, volume: number) {
   const masterVolume = ColdDeviceStorage.get("sound_masterVolume");
-  if (masterVolume === 0) return;
+  if (masterVolume === 0 || volume === 0) return;
 
-  const audio = setVolume(getAudio(file), volume);
-  audio.play();
+  const soundSource = ctx.createBufferSource();
+  const gainNode = ctx.createGain();
+  soundSource.buffer = await getAudio(file);
+  gainNode.gain.value = masterVolume * volume;
+  soundSource.connect(gainNode).connect(ctx.destination);
+  soundSource.start();
 }
diff -ru migrateWork/scripts/theme.ts src/scripts/theme.ts
--- migrateWork/scripts/theme.ts	2023-02-19 20:26:50
+++ src/scripts/theme.ts	2023-02-18 21:58:45
@@ -15,6 +15,8 @@
 import darkTheme from "@/themes/_dark.json5";
 import { deepClone } from "./clone";
 import { miLocalStorage } from "@/local-storage";
+import { StatusBar, Style } from "@capacitor/status-bar";
+import { storedDeviceInfo } from "@/init";
 
 export const themeProps = Object.keys(lightTheme.props).filter(
   (key) => !key.startsWith("X")
@@ -68,6 +70,11 @@
   }, 1000);
 
   const colorSchema = theme.base === "dark" ? "dark" : "light";
+  if (storedDeviceInfo.platform == "ios") {
+    StatusBar.setStyle({
+      style: theme.base === "dark" ? Style.Dark : Style.Light,
+    });
+  }
 
   // Deep copy
   const _theme = deepClone(theme);
diff -ru migrateWork/scripts/upload.ts src/scripts/upload.ts
--- migrateWork/scripts/upload.ts	2023-02-19 20:26:50
+++ src/scripts/upload.ts	2023-02-18 21:58:45
@@ -1,6 +1,6 @@
 import { reactive, ref } from "vue";
 import * as Misskey from "misskey-js";
-import { readAndCompressImage } from "browser-image-resizer";
+import * as loadImage from "blueimp-load-image";
 import { getCompressionConfig } from "./upload/compress-config";
 import { defaultStore } from "@/store";
 import { apiUrl } from "@/config";
@@ -54,7 +54,7 @@
       let resizedImage: Blob | undefined;
       if (config) {
         try {
-          const resized = await readAndCompressImage(file, config);
+          const resized = await loadImage.scale(file, config);
           if (resized.size < file.size || file.type === "image/webp") {
             // The compression may not always reduce the file size
             // (and WebP is not browser safe yet)
diff -ru migrateWork/stream.ts src/stream.ts
--- migrateWork/stream.ts	2023-02-19 20:26:50
+++ src/stream.ts	2023-02-18 21:58:45
@@ -1,15 +1,11 @@
 import * as Misskey from "misskey-js";
 import { markRaw } from "vue";
 import { $i } from "@/account";
-import { url } from "@/config";
 
-export const stream = markRaw(
-  new Misskey.Stream(
-    url,
-    $i
-      ? {
-          token: $i.token,
-        }
-      : null
-  )
-);
+export const stream = $i
+  ? markRaw(
+      new Misskey.Stream($i.instanceUrl, {
+        token: $i?.token,
+      })
+    )
+  : null;
diff -ru migrateWork/theme-store.ts src/theme-store.ts
--- migrateWork/theme-store.ts	2023-02-19 20:26:50
+++ src/theme-store.ts	2023-02-18 22:55:31
@@ -13,37 +13,26 @@
 export async function fetchThemes(): Promise<void> {
   if ($i == null) return;
 
-  try {
-    const themes = await api("i/registry/get", {
-      scope: ["client"],
-      key: "themes",
-    });
-    miLocalStorage.setItem(lsCacheKey!, JSON.stringify(themes));
-  } catch (err) {
-    if (err.code === "NO_SUCH_KEY") return;
-    throw err;
-  }
+  // try {
+  // const themes = await api('i/registry/get', { scope: ['client'], key: 'themes' });
+  //   miLocalStorage.setItem(lsCacheKey!, JSON.stringify(themes));
+  // } catch (err) {
+  //   if (err.code === "NO_SUCH_KEY") return;
+  //   throw err;
+  // }
 }
 
 export async function addTheme(theme: Theme): Promise<void> {
   if ($i == null) return;
   await fetchThemes();
   const themes = getThemes().concat(theme);
-  await api("i/registry/set", {
-    scope: ["client"],
-    key: "themes",
-    value: themes,
-  });
+  // await api('i/registry/set', { scope: ['client'], key: 'themes', value: themes });
   miLocalStorage.setItem(lsCacheKey!, JSON.stringify(themes));
 }
 
 export async function removeTheme(theme: Theme): Promise<void> {
   if ($i == null) return;
   const themes = getThemes().filter((t) => t.id !== theme.id);
-  await api("i/registry/set", {
-    scope: ["client"],
-    key: "themes",
-    value: themes,
-  });
+  // await api('i/registry/set', { scope: ['client'], key: 'themes', value: themes });
   miLocalStorage.setItem(lsCacheKey!, JSON.stringify(themes));
 }
diff -ru migrateWork/ui/_common_/common.ts src/ui/_common_/common.ts
--- migrateWork/ui/_common_/common.ts	2023-02-19 20:26:50
+++ src/ui/_common_/common.ts	2023-02-18 21:58:45
@@ -60,7 +60,7 @@
             icon: "ti ti-cookie",
           },
           $i &&
-          ($i.isAdmin || $i.policies.canInvite) &&
+          ($i.isAdmin || $i?.policies?.canInvite) &&
           instance.disableRegistration
             ? {
                 text: i18n.ts.invite,
@@ -82,7 +82,7 @@
                 },
               }
             : undefined,
-          $i && ($i.isAdmin || $i.policies.canManageCustomEmojis)
+          $i && ($i.isAdmin || $i?.policies?.canManageCustomEmojis)
             ? {
                 type: "link",
                 to: "/custom-emojis-manager",
@@ -104,6 +104,12 @@
         type: "link",
         text: i18n.ts.aboutMisskey,
         to: "/about-misskey",
+      },
+      {
+        type: "a",
+        target: "_blank",
+        href: "https://github.com/fruitriin/missRirica-client",
+        text: i18n.ts.ririca.name,
       },
     ],
     ev.currentTarget ?? ev.target,
diff -ru migrateWork/ui/_common_/common.vue src/ui/_common_/common.vue
--- migrateWork/ui/_common_/common.vue	2023-02-19 20:26:50
+++ src/ui/_common_/common.vue	2023-02-18 22:55:31
@@ -36,10 +36,8 @@
     />
   </TransitionGroup>
 
-  <XStreamIndicator />
+  <!--<XStreamIndicator/>-->
 
-  <div v-if="pendingApiRequestsCount > 0" id="wait"></div>
-
   <div v-if="dev" id="devTicker"><span>DEV BUILD</span></div>
 
   <div v-if="$i && $i.isBot" id="botWarn">
@@ -52,16 +50,14 @@
 import * as misskey from "misskey-js";
 import { swInject } from "./sw-inject";
 import XNotification from "./notification.vue";
-import { popup, popups, pendingApiRequestsCount } from "@/os";
+import { popup, popups } from "@/os";
 import { uploads } from "@/scripts/upload";
 import * as sound from "@/scripts/sound";
 import { $i } from "@/account";
 import { stream } from "@/stream";
 import { i18n } from "@/i18n";
 
-const XStreamIndicator = defineAsyncComponent(
-  () => import("./stream-indicator.vue")
-);
+// const XStreamIndicator = defineAsyncComponent(() => import('./stream-indicator.vue'));
 const XUpload = defineAsyncComponent(() => import("./upload.vue"));
 
 const dev = _DEV_;
diff -ru migrateWork/ui/visitor/b.vue src/ui/visitor/b.vue
--- migrateWork/ui/visitor/b.vue	2023-02-19 20:26:50
+++ src/ui/visitor/b.vue	2023-02-18 22:55:31
@@ -2,10 +2,10 @@
   <div class="mk-app">
     <a
       v-if="root"
-      href="https://github.com/misskey-dev/misskey"
       target="_blank"
       class="github-corner"
       aria-label="View source on GitHub"
+      @click="linkToGithub"
       ><svg
         width="80"
         height="80"
@@ -72,35 +72,36 @@
 
     <Transition :name="$store.state.animation ? 'tray' : ''">
       <div v-if="showMenu" class="menu">
-        <MkA to="/" class="link" active-class="active"
-          ><i class="ti ti-home icon"></i>{{ $ts.home }}</MkA
-        >
+        <MkA to="/" class="link" active-class="active">
+          <i class="ti ti-home icon"></i>{{ $ts.home }}
+        </MkA>
         <MkA
           v-if="isTimelineAvailable"
           to="/timeline"
           class="link"
           active-class="active"
-          ><i class="ti ti-message icon"></i>{{ $ts.timeline }}</MkA
         >
-        <MkA to="/explore" class="link" active-class="active"
-          ><i class="ti ti-hash icon"></i>{{ $ts.explore }}</MkA
-        >
-        <MkA to="/announcements" class="link" active-class="active"
-          ><i class="ti ti-speakerphone icon"></i>{{ $ts.announcements }}</MkA
-        >
-        <MkA to="/channels" class="link" active-class="active"
-          ><i class="ti ti-device-tv icon"></i>{{ $ts.channel }}</MkA
-        >
+          <i class="ti ti-message icon"></i>{{ $ts.timeline }}
+        </MkA>
+        <MkA to="/explore" class="link" active-class="active">
+          <i class="ti ti-hash icon"></i>{{ $ts.explore }}
+        </MkA>
+        <MkA to="/announcements" class="link" active-class="active">
+          <i class="ti ti-speakerphone icon"></i>{{ $ts.announcements }}
+        </MkA>
+        <MkA to="/channels" class="link" active-class="active">
+          <i class="ti ti-device-tv icon"></i>{{ $ts.channel }}
+        </MkA>
         <div class="divider"></div>
-        <MkA to="/pages" class="link" active-class="active"
-          ><i class="ti ti-news icon"></i>{{ $ts.pages }}</MkA
-        >
-        <MkA to="/play" class="link" active-class="active"
-          ><i class="ti ti-player-play icon"></i>Play</MkA
-        >
-        <MkA to="/gallery" class="link" active-class="active"
-          ><i class="ti ti-icons icon"></i>{{ $ts.gallery }}</MkA
-        >
+        <MkA to="/pages" class="link" active-class="active">
+          <i class="ti ti-news icon"></i>{{ $ts.pages }}
+        </MkA>
+        <MkA to="/play" class="link" active-class="active">
+          <i class="ti ti-player-play icon"></i>Play
+        </MkA>
+        <MkA to="/gallery" class="link" active-class="active">
+          <i class="ti ti-icons icon"></i>{{ $ts.gallery }}
+        </MkA>
         <div class="action">
           <button class="_buttonPrimary" @click="signup()">
             {{ $ts.signup }}
@@ -131,6 +132,8 @@
   provideMetadataReceiver,
   setPageMetadata,
 } from "@/scripts/page-metadata";
+import { i18n } from "@/i18n";
+import { MenuA } from "@/types/menu";
 
 const DESKTOP_THRESHOLD = 1100;
 
@@ -144,18 +147,33 @@
   }
 });
 
+function linkToGithub() {
+  const misskeyLink: MenuA = {
+    type: "a",
+    target: "_blank",
+    href: "https://github.com/misskey-dev/misskey",
+    text: i18n.ts.aboutMisskey,
+  };
+  const missRirica: MenuA = {
+    type: "a",
+    target: "_blank",
+    href: "https://github.com/fruitriin/missRirica-client",
+    text: i18n.ts.ririca.name,
+  };
+  os.popupMenu([misskeyLink, missRirica]);
+}
+
 const announcements = {
   endpoint: "announcements",
   limit: 10,
 };
 
 const isTimelineAvailable =
-  instance.policies.ltlAvailable || instance.policies.gtlAvailable;
+  instance.policies?.ltlAvailable || instance.policies?.gtlAvailable;
 
 let showMenu = $ref(false);
 let isDesktop = $ref(window.innerWidth >= DESKTOP_THRESHOLD);
 let narrow = $ref(window.innerWidth < 1280);
-let meta = $ref();
 
 const keymap = $computed(() => {
   return {
@@ -168,10 +186,6 @@
 });
 
 const root = $computed(() => mainRouter.currentRoute.value.name === "index");
-
-os.api("meta", { detail: true }).then((res) => {
-  meta = res;
-});
 
 function signin() {
   os.popup(
Only in src/ui/visitor: b.vue.orig
